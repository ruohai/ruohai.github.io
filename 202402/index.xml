<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>202402s on 喵ฅ^•ﻌ•^ฅ</title>
    <link>https://ruohai.wang/202402/</link>
    <description>Recent content in 202402s on 喵ฅ^•ﻌ•^ฅ</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 06 Feb 2024 12:25:17 +0800</lastBuildDate><atom:link href="https://ruohai.wang/202402/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title> ERROR: unable to bind listening socket for address &#39;/run/php/php8.2-fpm.sock&#39;: No such file or directory (2)问题处理</title>
      <link>https://ruohai.wang/202402/easyimage-down-solution/</link>
      <pubDate>Tue, 06 Feb 2024 12:25:17 +0800</pubDate>
      
      <guid>https://ruohai.wang/202402/easyimage-down-solution/</guid>
      <description>昨天重启了一下我的linux小盒子，今天发现我的php网站easyimage服务gg了，无法访问。
排错过程 第一步：查看nginx错误日志
首先访问网站地址，显示502 bad gateway。那就先看下nginx的错误日志。
[crit] 8919#8919: *20 connect() to unix:/run/php/php8.2-fpm.sock failed (2: No such file or directory) while connecting to upstream, client: 192.168.1.*, server: easyimage, request: &amp;#34;GET /index.php HTTP/1.1&amp;#34;, upstream: &amp;#34;fastcgi://unix:/run/php/php8.2-fpm.sock:&amp;#34;, host: &amp;#34;192.168.1.*:*&amp;#34; 从这个错误日志可以判断错误原因是No such file or directory，找不到文件或路径。
但是我的linux小盒子，弄好php、php-fpm以后一直运行正常，没有增删过任何文件，只是重启了一下而已，为什么会报错呢。
第二步：查看php-fpm服务状态
根据nginx的日志，大致可以判定错误原因和php-fpm服务有关，那就看下这个服务的状态
systemctl status php8.2-fpm.service 结果如图
现在可以判定是php-fpm服务出问题了无法启动，导致无法转发php的请求。
第三步：php-fpm启动报错原因排查
既然是php-fpm服务出问题了，先重启试试，看是否有报错信息。
提示了查看详细错误信息的命令。
journalctl -xeu php8.2-fpm.service 错误日志很长啊，但核心的就箭头所指的一条。
虽然知道原因了，但不知道怎么解决，只能上网搜了。
最后在stackoverflow找到了解决方案：Unable to bind listening socket for address php-fpm
解决方案 在/run目录下新建一个php目录。
没错，就是在/run目录下新建一个php目录，也就是/run/php。
php-fpm启动以后需要这个/run/php/目录来存放运行文件。
至于为什么之前php跑的好好的没问题，也不需要自己来新建这个文件，而且没有变更过任何的配置、用户、权限，今天怎么就不行了？
🤔</description>
    </item>
    
    <item>
      <title>Tailscale出口节点（Exit Nodes）功能部署</title>
      <link>https://ruohai.wang/202402/tailscale-exit-nodes/</link>
      <pubDate>Tue, 06 Feb 2024 10:04:55 +0800</pubDate>
      
      <guid>https://ruohai.wang/202402/tailscale-exit-nodes/</guid>
      <description>前言 这段时间忙着照顾家人，因为老母亲又双叒叕因为主动脉夹层的原因做了第二次心脏手术，需要24小时陪护，所以我大部分时间呆在乡下，就有了乡下 &amp;amp; 杭州异地组网和通讯的需求。
上一篇文章记录了tailscale的子网路由（subnet routers）功能，我拿它作为跳板机，这样我只需要在一台设备上安装tailscale，就可以直接通过原来的 192.168.1.* 的内网ip地址直接访问局域网里的nas、玩客云、openwrt，甚至可以直接访问光猫的后台地址，不需要再每台机器装tailscale然后使用100开头的vpn网络IP地址来访问。
tailscale还有另一个功能：出口节点（exit nodes）。看了官方文档，作为中国人，我第一时间想到的应用场景，就是翻墙。😄
正好我好友jrr在澳洲，和他一起玩了一下这个exit nodes功能，自此我有了一个悉尼的网络出口，😄。
功能释疑 exit nodes的官方文档：Exit Nodes (route all traffic)
通俗来讲，就是在一个设备上安装tailscale，启用exit nodes功能。然后其它装了tailscale的机器，比如机器A，可以指定这台设备为出口（exit node）。之后机器A的所有网络流量都会由指定的出口节点进行路由转发。
官网的示意图。
部署 第一步：下载&amp;amp;安装tailscale
官方地址：Download
第二步：开启ip转发功能
这里以linux为例，因为我把tailscale装在linux小盒子上。
官方文档：Exit Nodes install
如果你的linux系统存在/etc/sysctl.d路径，执行以下命令
echo &amp;#39;net.ipv4.ip_forward = 1&amp;#39; | sudo tee -a /etc/sysctl.d/99-tailscale.conf echo &amp;#39;net.ipv6.conf.all.forwarding = 1&amp;#39; | sudo tee -a /etc/sysctl.d/99-tailscale.conf sudo sysctl -p /etc/sysctl.d/99-tailscale.conf 否则执行以下命令
echo &amp;#39;net.ipv4.ip_forward = 1&amp;#39; | sudo tee -a /etc/sysctl.conf echo &amp;#39;net.ipv6.conf.all.forwarding = 1&amp;#39; | sudo tee -a /etc/sysctl.</description>
    </item>
    
  </channel>
</rss>
