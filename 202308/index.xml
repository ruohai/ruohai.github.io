<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>202308s on 喵ฅ^•ﻌ•^ฅ</title>
    <link>https://ruohai.wang/202308/</link>
    <description>Recent content in 202308s on 喵ฅ^•ﻌ•^ฅ</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 23 Aug 2023 04:17:58 +0800</lastBuildDate><atom:link href="https://ruohai.wang/202308/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MacOS下给终端添加alias</title>
      <link>https://ruohai.wang/202308/macos-add-alias/</link>
      <pubDate>Wed, 23 Aug 2023 04:17:58 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/macos-add-alias/</guid>
      <description>目前macos默认shell是zsh，简单记录下给zsh添加自定义命令。
打开终端，进入用户目录。
cd ~ 我的机器默认没有.zshrc的配置文件，新建一个。
touch .zshrc 然后在.zshrc中添加alias。
alias ll=&amp;#39;ls -l&amp;#39; alias la=&amp;#39;ls -al&amp;#39; 保存退出，然后载入配置文件
source .zshrc 到这里就完成配置了～
吐槽下，macos自带中午拼音输入法竟然连波浪线～都区分了中英文的不同格式，中文和英文下～的编码不一样，导致markdown格式下中文格式的～不能被正常识别。淦。</description>
    </item>
    
    <item>
      <title>直刷版（emmc）玩客云系统的备份和还原</title>
      <link>https://ruohai.wang/202308/ws1608-use-dd-to-make-img/</link>
      <pubDate>Thu, 17 Aug 2023 14:26:23 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/ws1608-use-dd-to-make-img/</guid>
      <description>前言 其实之前已经写过一篇用dd制作系统备份镜像文件的文章，【Linux使用dd命令克隆磁盘（制作系统镜像）】。但写的有点啰嗦，直接改也不合适。索性重新写一篇简单的。
先定义一下两个名词：
当前系统：指装在玩客云emmc上的armbian 第三方系统：指装在u盘、sd卡上的玩客云armbian 用dd命令备份还原的原理和windows ghost一样，就是把整个emmc磁盘克隆，生成一个img镜像文件。要还原的时候，再用dd命令把img镜像文件写回emmc。
整个过程分成两步：备份 + 还原。备份可以在当前系统或第三方系统下操作，还原必须要通过第三方系统。
这篇文章中，我是在【当前系统】下备份，在【第三方系统】下还原。
准备工作 一个已经直刷armbian的玩客云（系统装在emmc） 备份操作需要准备一个移动硬盘或者存储U盘，因为生成的备份镜像大概1~2GB左右 还原系统需要准备一个已经刷了armbian的U盘或者sd卡 ssh连上玩客云机器 备份 先用lsblk命令确定分区信息和设备名称，输出结果如下
NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINTS sda 8:0 0 465.8G 0 disk └─sda1 8:1 0 465.8G 0 part /mnt mmcblk1 179:0 0 7.3G 0 disk ├─mmcblk1p1 179:1 0 256M 0 part /boot └─mmcblk1p2 179:2 0 7G 0 part /var/log.hdd / mmcblk1boot0 179:16 0 4M 1 disk mmcblk1boot1 179:32 0 4M 1 disk zram0 253:0 0 494.</description>
    </item>
    
    <item>
      <title>Linux用crontab实现定时重启</title>
      <link>https://ruohai.wang/202308/crontab-schedule-reboot/</link>
      <pubDate>Thu, 17 Aug 2023 10:27:35 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/crontab-schedule-reboot/</guid>
      <description>前言 有这个需求是因为我的armbian小机器ws1608，在运行5~7天左右的时间之后，会出现ipv6的网络问题，表现就是明明只有一个网卡的情况下，出现了两个全局的ipv6地址，此时ipv6下无法访问外网，导致ddns-go无法【通过接口】的方式获取ipv6地址，如果选择【通过网卡】获取ipv6地址，则因为出现两个ipv6地址，需要手动指定第一个还是第二个。这就意味着每次等我发现出现这个bug以后，都需要人为介入来纠正。
这个问题正确的解决方案，应该是排查为什么每运行一段时间会出现俩ipv6的ip，但网上找了一圈，暂时没有合理的解释。
那就只能重启大法了，每周重启一次！
定时任务 linux定时任务有俩实现方案，用systemd或者crontab，这里选择用crontab。
有俩注意点：
系统重启需要root权限 设备需要支持软重启（比如我手上的ws1508的某个固件就不支持软重启只能拔电源） sudo crontab -e 添加一行，设定每周四的4点0分重启
0 4 * * 4 /sbin/reboot 参考文章 1.Linux crontab 命令 https://www.runoob.com/linux/linux-comm-crontab.html
2.Linux设置定时重启 https://cloud.tencent.com/developer/article/2227856</description>
    </item>
    
    <item>
      <title>MacOS系统下添加SMB共享文件夹到开机自动挂载</title>
      <link>https://ruohai.wang/202308/macos-smb-folder-auto-mount/</link>
      <pubDate>Wed, 16 Aug 2023 02:02:01 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/macos-smb-folder-auto-mount/</guid>
      <description>前言 最近一个月因为apple在搞教育优惠送这送那的，m2芯片乞丐版本的mac mini直接跌破3000块。这么多年来我一直都是Windows系统用户，对macos并没有什么兴趣，但看这么便宜的份上，冲动入手了一个。
我并不是一个唯Windows系统为尊的用户，也用过不少的linux发行版，用过的桌面系统有xfce、gnome、unity和深度dde，都觉得可以接受。但不得不说，第一次上手macos，还是碰到了不少别扭和拧巴的地方，而且很多之前熟悉的操作都要从头开始查找要怎么用。
比如开机自动挂载局域网里的smb共享文件夹。
挂载 快捷键command + K打开连接服务器的窗口，或者用鼠标点击顶部菜单栏的【前往】然后选择【连接服务器】。
输入smb的访问地址。smb共享协议的网址需要用smb://开头。
输入访问网址，点击【连接】，输入smb设置的账户密码就连接成功了。打开【访达】可以看到。
加入登录项 以上的操作只针对本次系统登陆状态下有效，系统重启以后，依然需要重新打开【连接服务器】窗口来添加smb文件夹。现在需要把smb共享文件夹设置为开机自动挂载。
网上找了一些设置方案，发现不同的macos版本竟然调整了设置入口，所以这里做简单记录。
打开【系统设置】，找到【通用】，然后在右侧找到【登录项】。
点击加号。
弹出新窗口，选择smb文件夹位置，最后确定即可。</description>
    </item>
    
    <item>
      <title>Linux下操作分区扩容</title>
      <link>https://ruohai.wang/202308/ws1508-use-parted-to-expand-storage/</link>
      <pubDate>Thu, 10 Aug 2023 04:01:36 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/ws1508-use-parted-to-expand-storage/</guid>
      <description>前言 有这个需求是因为我一开始插在ws1508上的是一张2GB容量而且io性能极差无比的老旧sd卡，用dd命令克隆的整个磁盘镜像以后，烧录到了一根16GB容量、使用先进的usb3.0接口协议的U盘棒子上。但烧录到新棒子上的系统的分区表信息也是1:1克隆的，依然是老的2GB容量，意味着剩下了14GB的闲置空间。
现在的分区信息大概是这样
|--256MB启动分区--|--1.5GB系统分区--|--14GB闲置空间--| 目录结构
sda 14.4G ├─sda1 256M ## 启动分区 └─sda2 1.5G ## 系统分区 这种情况下，只需要调整系统分区/dev/sda2的结束点（end），把14GB闲置空间拼接上去就行了。
一开始我是准备在win下用disk genius来操作的，毕竟图形化界面简单易上手。但用dg操作的时候一直有报错无法执行，算了，换到linux下，用命令行界面！
前期准备 旧系统盘用dd命令克隆整个磁盘为img镜像文件，然后把img烧录到新的u盘棒子上，最后把新棒子插入设备，通电开机，连上ssh。
扩容 用parted工具，先获取基础信息。
调用parted工具
parted 此时命令提示符会以(parted)开头，意味着进入了parted工具界面。
先查看剩余空间
print free 打印出来的信息如下
Number Start End Size Type File system Flags 32.3kB 16.8MB 16.7MB Free Space 1 16.8MB 285MB 268MB primary fat16 bls_boot 2 285MB 1862MB 1577MB primary ext4 1862MB 15.5GB 13.6GB Free Space 这里可以看到分区2的结束点（end）是1862MB，从1862MB到15.5GB这13.6GB空间都是空闲空间（free space）。
查看存储设备的分区表
print /dev/sda 打印出来的信息如下
Number Start End Size Type File system Flags 1 16.</description>
    </item>
    
    <item>
      <title>Syncthing设置只同步照片和视频文件</title>
      <link>https://ruohai.wang/202308/syncthing-sync-media-files-only/</link>
      <pubDate>Tue, 08 Aug 2023 22:41:34 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/syncthing-sync-media-files-only/</guid>
      <description>syncthing这软件的设定是用来多个设备之间保持【文件夹】内容同步，默认情况下，选择了要同步的文件夹以后，就会把文件夹内的所有内容一股脑儿进行同步，这会导致很多缩略图或者某些需要忽略系统文件也同步出去。
我的使用场景下，想要的是之同步照片和视频内容，其他的都不需要同步。这里用到的解决方法是：使用syncthing的忽略模式。
这里对synchting忽略模式的语法不做解释，直接上最后的配置规则。
常见的手机照片格式：png，jpg，HEIC，jpeg 常见的手机视频格式：mp4，HEVC 常见的动图格式：gif 好了，现在的需求是，只同步以上这些格式的文件，其他统统忽略
!**.jpg !**.jpeg !**.png !**.HEIC !**.gif !**.mp4 !**.HEVC ** </description>
    </item>
    
    <item>
      <title>微软给你发钱啦~</title>
      <link>https://ruohai.wang/202308/diary-edge-browser-reward/</link>
      <pubDate>Sun, 06 Aug 2023 19:19:38 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/diary-edge-browser-reward/</guid>
      <description>昨晚在mac mini上装edge浏览器的时候又看到了microsoft账号上的积分，只要鼠标移到浏览器右上角账户头像，点一下，就会出现悬浮窗，提示你有多少microsoft reward。这个提示存在很久了，但我从没在意。
除了pc端，手机上我也用的edge浏览器，在edge中用bing搜索的时候偶尔手机会突然震动一下，然后app左上角的头像位置会出现一个金币转圈圈的动画。这个动静也出现很久了，但我依然没在意。
直到昨晚换mac mini时候，我终于好奇点进去看了一眼，然后发现：
微软给你发钱啦~ 微软积分商城兑换中心【官网地址】有一个非常值得兑换的商品：京东礼品卡！只要9600积分，就可以兑换50rmb的京东礼品卡！
京东礼品卡是硬通货，就算自己不在京东消费，也可以9~9.5折在网上卖给有需要的人。
获取积分的方法 之前我的主力浏览器是edge，主力搜索引擎是bing，从edge刚发布就开始使用至今，攒下了11000多积分，从没想过这竟然还能赚钱，而且这积分竟然还挺值钱。
所以在官网看下了积分的获取方式。
不过先申明：这积分只是类似翻箱底找出旧衣服发现兜里还有5块钱，是一种小惊喜，不要太严肃的对待这事。刷这个积分发不了财的。也不必为了这几毛几分的蝇头小利，特地去改变自己的浏览器和搜索引擎使用习惯。
第一个：微软积分商城页面，有每日任务，大概75积分。
第二个：使用必应（bing）搜索，pc端和移动端分开计分。
第三个：手机端装bing客户端，好像有个每日签到积分。
第四个：在微软商店里消费，具体参考官方给的积分规则。
总结就是，每天把所有积分全薅到大概也就200分，9600积分需要48天，平均每天1块钱。😄</description>
    </item>
    
    <item>
      <title>杭州动物园最近的人气顶流：马来熊</title>
      <link>https://ruohai.wang/202308/diary-hangzhou-zoo/</link>
      <pubDate>Sat, 05 Aug 2023 23:09:49 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/diary-hangzhou-zoo/</guid>
      <description>最近杭州动物园的两只马来熊非常的火，不仅国内人气高，甚至美英澳的新闻都做了报道。
只是因为它用俩后腿人立起来的时候，屁股上会出现明显的褶子，看着像玩偶服皮套的褶，所以网友调侃：它该不会是工作人员假扮的吧。
就这么点事竟然火了，火的莫名其妙。网友们果然都很闲啊。
正好我也闲，今天大热天，跑去杭州动物园看看。
前俩月去杭动的时候这俩熊还默默无闻，但今时不同往日，现在已经是人气顶流。
所以一个🐻的命运啊，不仅要靠自己的奋斗，也要&amp;hellip;&amp;hellip;</description>
    </item>
    
    <item>
      <title>对折腾Armbian小机器进入了不应期</title>
      <link>https://ruohai.wang/202308/diary-boring-days/</link>
      <pubDate>Fri, 04 Aug 2023 23:11:59 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/diary-boring-days/</guid>
      <description>捡垃圾玩armbian俩月，觉得啥都新鲜，这两天进入不应期了。
自有小主机，折腾来折腾去，最后就是下载机 + 文件共享。拿着锤子找钉子没有意义，自己用不上的服务，装它干啥。
╮(╯▽╰)╭
明天准备出门走走，正好杭州动物园的马来熊最近话题度挺高的。
就是这天太热了。</description>
    </item>
    
    <item>
      <title>迅雷赚钱宝一代（WS1408）在OpenWrt固件基础上安装和配置Samba</title>
      <link>https://ruohai.wang/202308/ws1408-samba-use-guide/</link>
      <pubDate>Wed, 02 Aug 2023 22:35:07 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/ws1408-samba-use-guide/</guid>
      <description>前言 ws1408只有一版openwrt固件，要在openwrt的基础上安装samba，和armbian有点不太一样，这里做简单记录。
其实在oenwrt的webui上也有入口可以安装软件和配置，但我实际用下来总是会有各种问题。所以最后放弃了webui安装和配置的方法，直接手搓。真的，自己手搓比webui上勾勾点点成功率高多了。
要安装软件，记得先换源，指路：迅雷赚钱宝一代（WS1408）的OpenWrt可用源分享
安装samba 先更新软件仓库
opkg update 查找软件
opkg list | grep samba 安装软件
opkg install luci-app-samba4 添加系统用户 ws1408的openwrt固件比较精简，默认只有root账户，想新增系统用户需要安装useradd。
opkg install shadow-useradd 添加用户jack。这里指定jack这个用户无法登录，因为只是用来做samba的用户，不会登录系统。
useradd jack -s /bin/false 如果jack这个用户需要登录系统，那上面的命令中去掉-s /bin/false，然后给他设置密码
passwd jack samba中添加用户 添加了系统用户以后，需要在samba中添加用户。下面这条命令敲完后回车，根据系统会提示设置密码
smbpasswd -a jack 如果想要删除samba用户，命令应该如下
smbpasswd -x jack 但我实际使用下来，这条删除用户的命令会一直提示处理失败。所以有效的办法是用nano打开/etc/samba/smbpasswd这个保存用户信息的文件，删除或者清空里面的内容。
配置共享文件夹 samba配置文件的路径是/etc/samba/smb.conf，但默认的这个smb.conf配置文件只是一个软链接，实际指向了/var/etc/smb.conf。我尝试直接修改这个软链接版的smb.conf文件，但每次一重启samba服务就会被重置。那正好，原始文件不动，咱另立门户。
# 进目录 cd /etc/samba # 把原文件重命名 mv smb.conf smb.conf.default # 新建一个配置文件 touch smb.conf 然后用nano编辑smb.conf，填写以下内容。因为我对samba共享的安全性要求略高，所以限定smb最低版本是smb2，限定只有jack可以访问，而且禁止匿名访问。
#======================= Global Setting ======================= [global] workgroup = WORKGROUP security = user server role = standalone server map to guest = never server min protocol = SMB2 #======================= Share Definitions ======================= [ShareFolder] comment = share comment path = /path/to/folder create mask = 0755 directory mask = 0755 valid users = jack browseable = yes writable = yes read only = no public = no guest ok = no 完成以上的配置以后，重启samba。</description>
    </item>
    
    <item>
      <title>迅雷赚钱宝一代（WS1408）用USB转TTL工具刷机</title>
      <link>https://ruohai.wang/202308/ws1408-use-ttl-to-flash/</link>
      <pubDate>Wed, 02 Aug 2023 17:36:56 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/ws1408-use-ttl-to-flash/</guid>
      <description>前言 这是一篇图片比较多的文章。
前两天提到我在给ws1408刷机的时候，因为选择了完全擦除flash模式，导致无法再二次刷机，因为usb burning tool软件中无法识别到设备。虽然不重新刷机也能用，但垃圾佬手上的设备，不能刷机怎么行，必须刷。
然后就入手了usb转ttl的工具，快递一到就立刻动手给两台ws1408拆机用ttl工具重新线刷。
刷机过程的步骤和资料，都是从恩山论坛获取的。但恩山论坛上的各种内容比较分散，在这里就简单的汇总记录。
准备 有一个usb转ttl的转接头和杜邦线。我买的是一款CH340G型号的转接头，指路 → CH340G土豪金USB转TTL模块RS232转串口模块刷机升级小板送杜邦线 有了转接头以后，需要安装驱动。驱动程序在卖转接头的淘宝店就有提供下载。记得安装驱动时需要把转接头插到电脑上，要不然会一直提示驱动安装失败。 电脑已经安装了putty 拆机 要刷机，首先需要把ws1408的主板拆出来。
撕掉贴纸，卸掉螺丝，撬开外壳，再卸掉4颗螺丝。
取下主板保护盖，就可以看到主板了。到这里主板已经可以直接取下来。
到这里就完成拆机了。
刷机 先确定一下主板上ttl针脚的定义，从左往右编号1234，1是TX，2是GND，4是RX。
接下去要连接主板和转接头。主板的tx对应转接头的rx，主板gnd对应转接头的gnd，主板rx对应转接头tx。接好后，usb头插入电脑。
先打开电脑的设备管理，查看usb转接头的硬件名称，这里看到是COM3。
然后电脑上打开putty，连接类型选Serial，Serial line填COM3，Speed填115200。然后点击Open打开终端。
这个时候主板接电源通电，通电后putty终端会开始代码跑屏，立刻按下回车键暂停，然后在终端中输入update后敲回车键确认，此时终端中会显示进入了线刷模式。
到这一步，就可以在电脑上打开usb burning tool软件，导入镜像包，记得选择擦除flash选择普通擦除，然后点开始。
最后用双公头连接主板和电脑，usb burning tool就会检测到硬件，开始烧入固件。
到这里就大功告成了，用usb转ttl工具刷机结束~
😄</description>
    </item>
    
    <item>
      <title>Syncthing实现增量备份/增量同步</title>
      <link>https://ruohai.wang/202308/syncthing-set-ignore-delete/</link>
      <pubDate>Wed, 02 Aug 2023 03:13:25 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/syncthing-set-ignore-delete/</guid>
      <description>脱水精简结论 Q：syncthing是否支持增量备份（增量同步）？
A：支持。把ignoreDelete参数从false改成true即可。
以下就是水内容 syncthing服务用来多个设备之间对某个文件夹进行内容的完全同步，从这个目的来说，增量备份这个功能就显得有点冲突。
所以syncthing虽然支持这个功能，但是把这个设置的入口隐藏在配置文件之中，在webui上并没有入口可以修改。官方甚至还有专门一个页面用来阐述这个功能开启以后，会出现的冲突场景。指路 → ignoreDelete
简单来讲，假定有A和B两个设备，B设备开始了ignoreDelete，那如果A设备上删除了某文件以后，B设备上并不会同步删除，此后如果B修改了这个文件，那是否需要同步到A设备上。这里就出现了一个违背【完全同步】设计初衷的冲突场景。
但我不一样啊！我是想实现增量备份功能，这个冲突的使用场景，然而正是我需要的！我的使用模式，就是一个服务端（server）只接收，加多个客户端（client）只发送。
服务端安装并启用syncthing可以看我之前写的这篇文章：Linux下Syncthing的安装和配置
现在需要在服务端开启ignoreDelete，修改syncthing的配置文件
nano /home/jack/.config/syncthing/config.xml 在folder标签内找到ignoreDelete，把false改成true，然后重启syncthing服务即可。
update@20230808 今天发现在syncthing网页端有设置ignoreDelete的入口。
第一步：
第二步：
第三步：</description>
    </item>
    
    <item>
      <title>用FFmpeg拼接行车记录仪的视频片段</title>
      <link>https://ruohai.wang/202308/ffmpeg-concat-video-clips/</link>
      <pubDate>Wed, 02 Aug 2023 00:10:32 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/ffmpeg-concat-video-clips/</guid>
      <description>前言 行车记录仪的视频具有相同编码、相同分辨率、相同视频格式的特点。行车记录仪往往都是设定视频每n分钟为一个片段，比如我的行车记录仪设定就是1分钟一个片段。
假定现在有一段2小时的行车记录，那就意味着120个视频片段。我的需求是把这120个片段拼接成一个长视频，然后加速10~20倍，最后形成一个10分钟左右时长的小视频，然后扔youtube上存档。
一开始我用剪映来处理，但实际使用过成功，无论是素材的管理，还是全选120个素材进行统一加速调节，或者最终的视频导出，都算不上是好的体验。
正好这种同编码、同分辨率、同视频格式的视频拼接，用ffmpeg来实现非常方便且快速。所以拆分步骤，用ffmpeg来处理视频拼接，再把拼接出来的长视频导进剪映处理。
ffmpeg官网wiki有非常详细的操作指导，啃完文档以后，实测单纯拼接视频确实很快。这里就做简单的操作记录和英翻中。
拼接 首先，要有一份包含了所有视频片段完整文件名的文档（怎么生成这个文档看后面的脚本），mylist.txt，内容如下：
file &amp;#39;/path/to/file1.mp4&amp;#39; file &amp;#39;/path/to/file2.mp4&amp;#39; file &amp;#39;/path/to/file3.mp4&amp;#39; 然后用命令拼接视频
ffmpeg -f concat -safe 0 -i mylist.txt -c copy output.mp4 也可以用相对路径的格式，mylist.txt文档和视频文件放在同一个目录，内容如下：
file &amp;#39;file1.mp4&amp;#39; file &amp;#39;file2.mp4&amp;#39; file &amp;#39;file3.mp4&amp;#39; 拼接视频命令，相对路径的情况下，-safe 0可以省略
ffmpeg -f concat -i /path/to/mylist.txt -c copy output.mp4 参数解释：
-f 用来指定输入/输出的文件格式。 -i 用来指定输入的文件 -c 用来指定编码，copy就是直接复制，不重新编码 好了，到这里用ffmpeg拼接视频的过程就完成了，因为-c copy不涉及编码转换，所以任务处理速度非常快，基本取决于硬盘的读写速度。
生成文档 官网提供了脚本用例，用来生成mylist.txt这种符合格式的、包含了视频文件完整路径的文档。以下举例中的wav调整为自己视频的格式即可。
windows cmd命令
(for %i in (*.wav) do @echo file &amp;#39;%i&amp;#39;) &amp;gt; mylist.txt windows powershell命令
foreach ($i in Get-ChildItem .</description>
    </item>
    
    <item>
      <title>赚钱宝二代（WS1508）直刷固件的初始化设置</title>
      <link>https://ruohai.wang/202308/ws1508-init-setup/</link>
      <pubDate>Tue, 01 Aug 2023 21:33:24 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/ws1508-init-setup/</guid>
      <description>前言 不知不觉进入8月了，生活就这么碌碌无为又怅然若失。
ws1508的可用固件分为三种：
nand直刷armbian u盘启动armbian u盘启动openwrt 其中nand直刷armbian方案，在刷入固件以后，并不是开箱即用，还需要做一些初始化设置，这里做一些记录。
nand直刷固件原帖指路：【赚钱宝2代 Armbian 直刷包】软件随便装，可以apt-get，可以挂甜糖～
初始化 首先就是重新调整分区大小
resize2fs /dev/data 因为原固件没有预装ntp，需要手动设置时区
timedatectl set-timezone Asia/Shanghai 再手动设置时间，为避免后续update出异常，这里要求时间比正确时间晚一天。比如今天是2023-08-01
timedatectl set-time 2023-07-31 换源/etc/apt/source.list，这里选择用清华的源。固件是debian 10（buster），默认不支持https，所以这里用http。如果想上https，在清华debian源页面有提供设置方法，可以自行查阅。
deb http://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free deb http://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free deb http://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free deb http://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free 还是换源，这次是文件/etc/apt/source.list.d/armbian.list，依然用清华的，依然是http。
deb http://mirrors.tuna.tsinghua.edu.cn/armbian buster main buster-utils buster-desktop 然后就可以执行apt update更新软件仓库了。但更新的时候会报错public key is not available，一般缺失的两个公钥是0E98404D386FA1D9和6ED0E7B82643E131，这里需要用命令重新导入公钥。注意俩公钥的编号，需要根据实际报错的公钥编号来调整。
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0E98404D386FA1D9 apt-key adv --keyserver hkp://keyserver.</description>
    </item>
    
  </channel>
</rss>
