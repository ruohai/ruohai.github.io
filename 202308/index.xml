<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>202308s on 喵ฅ^•ﻌ•^ฅ</title>
    <link>https://ruohai.wang/202308/</link>
    <description>Recent content in 202308s on 喵ฅ^•ﻌ•^ฅ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 05 Aug 2023 23:09:49 +0800</lastBuildDate><atom:link href="https://ruohai.wang/202308/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>杭州动物园最近的人气顶流：马来熊</title>
      <link>https://ruohai.wang/202308/diary-hangzhou-zoo/</link>
      <pubDate>Sat, 05 Aug 2023 23:09:49 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/diary-hangzhou-zoo/</guid>
      <description>最近杭州动物园的两只马来熊非常的火，不仅国内人气高，甚至美英澳的新闻都做了报道。只是因为它用俩后腿人立起来的时候，屁股上会出现明显的褶子，看着像玩偶服皮套的褶，所以网友最初调侃：它该不会是工作人员假扮的吧。
就这么点事竟然火的，火的莫名其妙。网友们果然都很闲啊。
正好我也闲，今天大热天，跑去杭州动物园看看。
前来月去杭动的时候这俩熊还默默无闻，下载已经是人气顶流。
所以一个🐻的命运啊，不仅要靠自己的奋斗，也要&amp;hellip;&amp;hellip;</description>
    </item>
    
    <item>
      <title>对折腾Armbian小机器进入了不应期</title>
      <link>https://ruohai.wang/202308/diary-boring-days/</link>
      <pubDate>Fri, 04 Aug 2023 23:11:59 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/diary-boring-days/</guid>
      <description>捡垃圾玩armbian俩月，觉得啥都新鲜，这两天进入不应期了。
自有小主机，折腾来折腾去，最后就是下载机 + 文件共享。拿着锤子找钉子没有意义，自己用不上的服务，装它干啥。
╮(╯▽╰)╭
明天准备出门走走，正好杭州动物园的马来熊最近话题度挺高的。
就是这天太热了。</description>
    </item>
    
    <item>
      <title>迅雷赚钱宝一代（WS1408）在OpenWrt固件基础上安装和配置Samba</title>
      <link>https://ruohai.wang/202308/ws1408-samba-use-guide/</link>
      <pubDate>Wed, 02 Aug 2023 22:35:07 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/ws1408-samba-use-guide/</guid>
      <description>前言 ws1408只有一版openwrt固件，要在openwrt的基础上安装samba，和armbian有点不太一样，这里做简单记录。
其实在oenwrt的webui上也有入口可以安装软件和配置，但我实际用下来总是会有各种问题。所以最后放弃了webui安装和配置的方法，直接手搓。真的，自己手搓比webui上勾勾点点成功率高多了。
要安装软件，记得先换源，指路：迅雷赚钱宝一代（WS1408）的OpenWrt可用源分享
安装samba 先更新软件仓库
opkg update 查找软件
opkg list | grep samba 安装软件
opkg install luci-app-samba4 添加系统用户 ws1408的openwrt固件比较精简，默认只有root账户，想新增系统用户需要安装useradd。
opkg install shadow-useradd 添加用户jack。这里指定jack这个用户无法登录，因为只是用来做samba的用户，不会登录系统。
useradd jack -s /bin/false 如果jack这个用户需要登录系统，那上面的命令中去掉-s /bin/false，然后给他设置密码
passwd jack samba中添加用户 添加了系统用户以后，需要在samba中添加用户。下面这条命令敲完后回车，根据系统会提示设置密码
smbpasswd -a jack 如果想要删除samba用户，命令应该如下
smbpasswd -x jack 但我实际使用下来，这条删除用户的命令会一直提示处理失败。所以有效的办法是用nano打开/etc/samba/smbpasswd这个保存用户信息的文件，删除或者清空里面的内容。
配置共享文件夹 samba配置文件的路径是/etc/samba/smb.conf，但默认的这个smb.conf配置文件只是一个软链接，实际指向了/var/etc/smb.conf。我尝试直接修改这个软链接版的smb.conf文件，但每次一重启samba服务就会被重置。那正好，原始文件不动，咱另立门户。
# 进目录 cd /etc/samba # 把原文件重命名 mv smb.conf smb.conf.default # 新建一个配置文件 touch smb.conf 然后用nano编辑smb.conf，填写以下内容。因为我对samba共享的安全性要求略高，所以限定smb最低版本是smb2，限定只有jack可以访问，而且禁止匿名访问。
#======================= Global Setting ======================= [global] workgroup = WORKGROUP security = user server role = standalone server map to guest = never server min protocol = SMB2 #======================= Share Definitions ======================= [ShareFolder] comment = share comment path = /path/to/folder create mask = 0755 directory mask = 0755 valid users = jack browseable = yes writable = yes read only = no public = no guest ok = no 完成以上的配置以后，重启samba。</description>
    </item>
    
    <item>
      <title>迅雷赚钱宝一代（WS1408）用USB转TTL工具刷机</title>
      <link>https://ruohai.wang/202308/ws1408-use-ttl-to-flash/</link>
      <pubDate>Wed, 02 Aug 2023 17:36:56 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/ws1408-use-ttl-to-flash/</guid>
      <description>前言 这是一篇图片比较多的文章。
前两天提到我在给ws1408刷机的时候，因为选择了完全擦除flash模式，导致无法再二次刷机，因为usb burning tool软件中无法识别到设备。虽然不重新刷机也能用，但垃圾佬手上的设备，不能刷机怎么行，必须刷。
然后就入手了usb转ttl的工具，快递一到就立刻动手给两台ws1408拆机用ttl工具重新线刷。
刷机过程的步骤和资料，都是从恩山论坛获取的。但恩山论坛上的各种内容比较分散，在这里就简单的汇总记录。
准备 有一个usb转ttl的转接头和杜邦线。我买的是一款CH340G型号的转接头，指路 → CH340G土豪金USB转TTL模块RS232转串口模块刷机升级小板送杜邦线 有了转接头以后，需要安装驱动。驱动程序在卖转接头的淘宝店就有提供下载。记得安装驱动时需要把转接头插到电脑上，要不然会一直提示驱动安装失败。 电脑已经安装了putty 拆机 要刷机，首先需要把ws1408的主板拆出来。
撕掉贴纸，卸掉螺丝，撬开外壳，再卸掉4颗螺丝。
取下主板保护盖，就可以看到主板了。到这里主板已经可以直接取下来。
到这里就完成拆机了。
刷机 先确定一下主板上ttl针脚的定义，从左往右编号1234，1是TX，2是GND，4是RX。
接下去要连接主板和转接头。主板的tx对应转接头的rx，主板gnd对应转接头的gnd，主板rx对应转接头tx。接好后，usb头插入电脑。
先打开电脑的设备管理，查看usb转接头的硬件名称，这里看到是COM3。
然后电脑上打开putty，连接类型选Serial，Serial line填COM3，Speed填115200。然后点击Open打开终端。
这个时候主板接电源通电，通电后putty终端会开始代码跑屏，立刻按下回车键暂停，然后在终端中输入update后敲回车键确认，此时终端中会显示进入了线刷模式。
到这一步，就可以在电脑上打开usb burning tool软件，导入镜像包，记得选择擦除flash选择普通擦除，然后点开始。
最后用双公头连接主板和电脑，usb burning tool就会检测到硬件，开始烧入固件。
到这里就大功告成了，用usb转ttl工具刷机结束~
😄</description>
    </item>
    
    <item>
      <title>Syncthing实现增量备份/增量同步</title>
      <link>https://ruohai.wang/202308/syncthing-set-ignore-delete/</link>
      <pubDate>Wed, 02 Aug 2023 03:13:25 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/syncthing-set-ignore-delete/</guid>
      <description>脱水精简结论 Q：syncthing是否支持增量备份（增量同步）？
A：支持。把ignoreDelete参数从false改成true即可。
以下就是水内容 syncthing服务用来多个设备之间对某个文件夹进行内容的完全同步，从这个目的来说，增量备份这个功能就显得有点冲突。
所以syncthing虽然支持这个功能，但是把这个设置的入口隐藏在配置文件之中，在webui上并没有入口可以修改。官方甚至还有专门一个页面用来阐述这个功能开启以后，会出现的冲突场景。指路 → ignoreDelete
简单来讲，假定有A和B两个设备，B设备开始了ignoreDelete，那如果A设备上删除了某文件以后，B设备上并不会同步删除，此后如果B修改了这个文件，那是否需要同步到A设备上。这里就出现了一个违背【完全同步】设计初衷的冲突场景。
但我不一样啊！我是想实现增量备份功能，这个冲突的使用场景，然而正是我需要的！我的使用模式，就是一个服务端（server）只接收，加多个客户端（client）只发送。
服务端安装并启用syncthing可以看我之前写的这篇文章：Linux下Syncthing的安装和配置
现在需要在服务端开启ignoreDelete，修改syncthing的配置文件
nano /home/jack/.config/syncthing/config.xml 在folder标签内找到ignoreDelete，把false改成true，然后重启syncthing服务即可。</description>
    </item>
    
    <item>
      <title>用FFmpeg拼接行车记录仪的视频片段</title>
      <link>https://ruohai.wang/202308/ffmpeg-concat-video-clips/</link>
      <pubDate>Wed, 02 Aug 2023 00:10:32 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/ffmpeg-concat-video-clips/</guid>
      <description>前言 行车记录仪的视频具有相同编码、相同分辨率、相同视频格式的特点。行车记录仪往往都是设定视频每n分钟为一个片段，比如我的行车记录仪设定就是1分钟一个片段。
假定现在有一段2小时的行车记录，那就意味着120个视频片段。我的需求是把这120个片段拼接成一个长视频，然后加速10~20倍，最后形成一个10分钟左右时长的小视频，然后扔youtube上存档。
一开始我用剪映来处理，但实际使用过成功，无论是素材的管理，还是全选120个素材进行统一加速调节，或者最终的视频导出，都算不上是好的体验。
正好这种同编码、同分辨率、同视频格式的视频拼接，用ffmpeg来实现非常方便且快速。所以拆分步骤，用ffmpeg来处理视频拼接，再把拼接出来的长视频导进剪映处理。
ffmpeg官网wiki有非常详细的操作指导，啃完文档以后，实测单纯拼接视频确实很快。这里就做简单的操作记录和英翻中。
拼接 首先，要有一份包含了所有视频片段完整文件名的文档（怎么生成这个文档看后面的脚本），mylist.txt，内容如下：
file &amp;#39;/path/to/file1.mp4&amp;#39; file &amp;#39;/path/to/file2.mp4&amp;#39; file &amp;#39;/path/to/file3.mp4&amp;#39; 然后用命令拼接视频
ffmpeg -f concat -safe 0 -i mylist.txt -c copy output.mp4 也可以用相对路径的格式，mylist.txt文档和视频文件放在同一个目录，内容如下：
file &amp;#39;file1.mp4&amp;#39; file &amp;#39;file2.mp4&amp;#39; file &amp;#39;file3.mp4&amp;#39; 拼接视频命令，相对路径的情况下，-safe 0可以省略
ffmpeg -f concat -i /path/to/mylist.txt -c copy output.mp4 参数解释：
-f 用来指定输入/输出的文件格式。 -i 用来指定输入的文件 -c 用来指定编码，copy就是直接复制，不重新编码 好了，到这里用ffmpeg拼接视频的过程就完成了，因为-c copy不涉及编码转换，所以任务处理速度非常快，基本取决于硬盘的读写速度。
生成文档 官网提供了脚本用例，用来生成mylist.txt这种符合格式的、包含了视频文件完整路径的文档。以下举例中的wav调整为自己视频的格式即可。
windows cmd命令
(for %i in (*.wav) do @echo file &amp;#39;%i&amp;#39;) &amp;gt; mylist.txt windows powershell命令
foreach ($i in Get-ChildItem .</description>
    </item>
    
    <item>
      <title>赚钱宝二代（WS1508）直刷固件的初始化设置</title>
      <link>https://ruohai.wang/202308/ws1508-init-setup/</link>
      <pubDate>Tue, 01 Aug 2023 21:33:24 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/ws1508-init-setup/</guid>
      <description>前言 不知不觉进入8月了，生活就这么碌碌无为又怅然若失。
ws1508的可用固件分为三种：
nand直刷armbian u盘启动armbian u盘启动openwrt 其中nand直刷armbian方案，在刷入固件以后，并不是开箱即用，还需要做一些初始化设置，这里做一些记录。
nand直刷固件原帖指路：【赚钱宝2代 Armbian 直刷包】软件随便装，可以apt-get，可以挂甜糖～
初始化 首先就是重新调整分区大小
resize2fs /dev/data 因为原固件没有预装ntp，需要手动设置时区
timedatectl set-timezone Asia/Shanghai 再手动设置时间，为避免后续update出异常，这里要求时间比正确时间晚一天。比如今天是2023-08-01
timedatectl set-time 2023-07-31 换源/etc/apt/source.list，这里选择用清华的源。固件是debian 10（buster），默认不支持https，所以这里用http。如果想上https，在清华debian源页面有提供设置方法，可以自行查阅。
deb http://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free deb http://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free deb http://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free deb http://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free 还是换源，这次是文件/etc/apt/source.list.d/armbian.list，依然用清华的，依然是http。
deb http://mirrors.tuna.tsinghua.edu.cn/armbian buster main buster-utils buster-desktop 然后就可以执行apt update更新软件仓库了。但更新的时候会报错public key is not available，一般缺失的两个公钥是0E98404D386FA1D9和6ED0E7B82643E131，这里需要用命令重新导入公钥。注意俩公钥的编号，需要根据实际报错的公钥编号来调整。
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0E98404D386FA1D9 apt-key adv --keyserver hkp://keyserver.</description>
    </item>
    
  </channel>
</rss>
