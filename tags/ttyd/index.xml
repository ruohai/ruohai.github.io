<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ttyd on 喵ฅ^•ﻌ•^ฅ</title>
    <link>https://ruohai.wang/tags/ttyd/</link>
    <description>Recent content in ttyd on 喵ฅ^•ﻌ•^ฅ</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 28 Feb 2024 20:47:06 +0800</lastBuildDate><atom:link href="https://ruohai.wang/tags/ttyd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ttyd使用Nginx实现HTTP基本认证（HTTP Basic Authentication）</title>
      <link>https://ruohai.wang/202402/ttyd-config-auth-proxy-with-nginx/</link>
      <pubDate>Wed, 28 Feb 2024 20:47:06 +0800</pubDate>
      
      <guid>https://ruohai.wang/202402/ttyd-config-auth-proxy-with-nginx/</guid>
      <description>前言 之前写过一篇在玩客云上安装ttyd的博客，文章指路：【在玩客云上安装ttyd】。
ttyd默认的认证方法是在启动命令中使用-c参数来设置用户名和密码，举例如下
ttyd -c jacky:123456 bash 这样确实很方便啊，但是有一个问题，就是使用htop查看进程时，会发现ttyd的进程是明文的，也就是进程会显示
ttyd -c jacky:123456 bash 🤔，不管这个系统是独自使用还是多人共用，这种完全暴露用户名和密码的方式实在是让人身心不安。
那有没有其它认证的方法，比如把用户和密码信息保存在文件中，ttyd启动命令从文件中读取用户信息。
查了项目github主页的issues，很多年前就有开发者提交了这个功能的代码，但都被作者关闭、驳回了。
既然ttyd的开发者如此固执的拒绝合并这个功能的代码，那就看下怎么通过他所说的Auth Proxy来实现。
配置 首先贴上ttyd项目wiki中提供的配置手册：【Auth Proxy】
第一步：ttyd启动命令调整
ttyd的启动命令，从之前的
ttyd -c jacky:123456 bash 调整为
ttyd -i /tmp/ttyd.sock -H X-WEBAUTH-USER bash 调整后完整版的ttyd.service配置如下
[Unit] Description=TTYD After=syslog.target After=network.target [Service] User=[user] ExecStart=/opt/ttyd/ttyd.armhf -p 12345 -i /tmp/ttyd.sock -H X-WEBAUTH-USER -W bash Type=simple Restart=always [Install] WantedBy=multi-user.target 第二步：nginx配置
先安装nginx这个不多说了。根据wiki中给出的nginx配置，完整版本如下，注意调整监听的端口号。
server { listen 12345; server_name ttyd; location / { auth_basic &amp;#34;ttyd&amp;#34;; auth_basic_user_file &amp;#34;/etc/nginx/htpasswd/ttyd&amp;#34;; proxy_set_header X-WEBAUTH-USER $remote_user; proxy_set_header Authorization &amp;#34;&amp;#34;; proxy_http_version 1.</description>
    </item>
    
    <item>
      <title>Linux下用Nginx给ttyd设置SSL开启HTTPS访问</title>
      <link>https://ruohai.wang/202307/ttyd-update-to-https/</link>
      <pubDate>Sun, 16 Jul 2023 01:17:58 +0800</pubDate>
      
      <guid>https://ruohai.wang/202307/ttyd-update-to-https/</guid>
      <description>用nginx给ttyd实现https访问，99%的设置都和【Linux下用Nginx给File Browser设置SSL开启HTTPS访问】一样，直接照搬即可。但如果完全照搬，会发现https下登录ttyd以后，页面全黑，有一个浮窗显示【press enter to reconnect】，没有光标，也没有命令提示符。
很容易就明白出现这个问题是因为ttyd使用的是websocket协议，通过nginx代理转发以后出现了bug。
网上搜了一下解决方案，根据【这个页面】和【这个页面】上的两个解答，需要对nginx的配置内容稍微修改。
注意 设定域名为：jackiechang.cn 设定外网端口为：11111 设定内网端口为：4533 配置文件 server {listen [::]:11111 ssl;server_name jackiechang.cn;ssl_certificate ssl/jackiechang.cn.pem;ssl_certificate_key ssl/jackiechang.cn.key;ssl_session_cache shared:SSL:1m;ssl_session_timeout 5m;ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;ssl_prefer_server_ciphers on;error_page 497 https://$host:$server_port$uri$is_args$args;location / {proxy_set_header Host $host;proxy_set_header X-Forwarded-Proto $scheme;proxy_set_header X-Forwarded-Port $server_port;proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;proxy_set_header Upgrade $http_upgrade;proxy_set_header Connection &amp;#34;upgrade&amp;#34;;proxy_http_version 1.1;proxy_pass http://localhost:4533;}} </description>
    </item>
    
    <item>
      <title>Linux下ttyd使用Git提示Author identity unknown和fatal: $HOME not set问题的解决</title>
      <link>https://ruohai.wang/202307/git-home-not-set-bugfix/</link>
      <pubDate>Sat, 15 Jul 2023 17:50:39 +0800</pubDate>
      
      <guid>https://ruohai.wang/202307/git-home-not-set-bugfix/</guid>
      <description>我在ttyd下使用git commit -m &#39;xxx&#39;命令时，出现了一个无法识别git用户信息的错误。
具体报错信息如下：
Author identity unknown *** Please tell me who you are. Run git config --global user.email &amp;#34;you@example.com&amp;#34; git config --global user.name &amp;#34;Your Name&amp;#34; to set your account&amp;#39;s default identity. Omit --global to set the identity only in this repository. fatal: unable to auto-detect email address (got &amp;#39;user@hostname.(none)&amp;#39;) 意思就是git的用户身份认证信息未知，需要用git config --global进行配置。但我已经在系统中配置了git username&amp;amp;email，在本地终端中使用都正常，仅在ttyd中出现了这个bug。
那既然都提示要设置了，就先git config --global设置一下，这时又出现了第二个报错。
fatal: $HOME not set 到这里基本就明白错误原因了，ttyd下git无法识别$HOME环境变量，所以无法读取到~/.gitconfig文件内配置的username&amp;amp;email信息。
解决方案 根据这个报错搜了一下解决方案，根据【stackoverflow上的这个帖子】，解决方案就是用git config --system来设定git用户信息
git config --system user.</description>
    </item>
    
    <item>
      <title>在玩客云上安装ttyd</title>
      <link>https://ruohai.wang/202307/install-ttyd/</link>
      <pubDate>Sat, 15 Jul 2023 16:38:06 +0800</pubDate>
      
      <guid>https://ruohai.wang/202307/install-ttyd/</guid>
      <description>前言 ttyd，web版本的终端，和本地终端功能一致，特别适合出门在外没有带自己电脑但又需要访问自己vps进行操作的场景，只需要打开浏览器，访问配置好的ttyd就OK。
github项目指路：【ttyd - Share your terminal over the web】
安装 第一步：下载安装包
第一步就是创建安装目录、下载安装包基础操作，不赘述。玩客云的硬件是arm32/armv7，选择armhf版本。
sudo mkdir -p /op/ttyd ; cd $_ sudo wget https://github.com/tsl0922/ttyd/releases/download/1.7.4/ttyd.armhf 第二步：添加可执行权限
下载的二进制包默认没有执行权限，需要授权
sudo chmod +x ttyd.armhf 第三步：查看学习手册
先学习一下ttyd的手册，有几个参数后面需要用到
-p，指定端口 -c，设定认证信息，也就是账户和密码，格式是username:password -W，设定写权限。默认只读，如果要写权限需要加上这个参数 -6，开启支持ipv6，如果通过ipv6 + ddns进行访问的家宽用户可以添加这个参数 第四步：创建systemd配置文件
要把ttyd添加到系统服务，设置开机自启。
先创建systemd配置文件
sudo nano ttyd.service 添加以下内容。如果不是用root用户运行，记得修改User参数。其中-p和-c参数的值根据自己的喜好调整。
[Unit] Description=TTYD After=syslog.target After=network.target [Service] User=[user] ExecStart=/opt/ttyd/ttyd.armhf -p 123456 -c jack:123456 -W -6 bash Type=simple Restart=always [Install] WantedBy=multi-user.target 然后进/system/目录创建软链接
cd /etc/systemd/system sudo ln -s /opt/ttyd/ttyd.service ttyd.service 第六步：启动ttyd</description>
    </item>
    
  </channel>
</rss>
