<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PVE on 喵ฅ^•ﻌ•^ฅ</title>
    <link>https://ruohai.wang/tags/pve/</link>
    <description>Recent content in PVE on 喵ฅ^•ﻌ•^ฅ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 20 Dec 2024 01:03:30 +0800</lastBuildDate><atom:link href="https://ruohai.wang/tags/pve/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PVE基础使用：创建虚拟机时机型i440fx和q35如何选择</title>
      <link>https://ruohai.wang/202412/pve-i440fx-vs-q35/</link>
      <pubDate>Fri, 20 Dec 2024 01:03:30 +0800</pubDate>
      
      <guid>https://ruohai.wang/202412/pve-i440fx-vs-q35/</guid>
      <description>前言 开篇Tips：本文根据chatgpt的回答进行整理。
正文 在pve系统下创建虚拟机时，有一个机型的选项，默认是i440fx，还有另外一个可选项q35。这两选项有何区别，它俩孰优孰劣，该如何选择呢？
在 Proxmox VE (PVE) 中创建虚拟机时，i440fx和q35是两种不同的虚拟机硬件平台，它们主要的区别在于芯片组的模拟。
i440fx：
老旧平台，类似于早期的 Intel 440FX 芯片组。 它支持较老的硬件和设备模型，兼容性较强，适合运行较旧的操作系统或软件（比如 Windows XP、Windows 7 等）。 适合需要较低兼容性要求的系统。 q35：
较新的平台，模拟的是 Intel 的 Q35 芯片组，支持更多现代特性。 提供更好的硬件虚拟化支持，例如更好的 PCIe 设备支持、SATA 和更高效的内存管理。 支持 UEFI 启动，适合运行现代操作系统，尤其是 Windows 10、Windows 11 或 Linux 现代发行版。 选择哪个？
如果你要运行较旧的操作系统或不需要特殊硬件支持，i440fx 是一个更安全的选择，因为它兼容性更好。 如果你要运行较新的操作系统或需要现代硬件特性（如 PCIe 支持、UEFI 启动等），q35 更适合。 一般来说，现代的虚拟化需求推荐选择 q35，尤其是在需要支持 64 位 UEFI 引导或现代硬件功能时。 结论 默认i440fx适合绝大部分情况，兼容性更好 如果硬件比较新，推荐q35 如果有特殊需求，比如uefi启动（win8之后的windows系统）、硬件直通，选q35 喝杯奶茶 </description>
    </item>
    
    <item>
      <title>PVE基础操作之：虚拟机的备份和还原</title>
      <link>https://ruohai.wang/202411/pve-backup-and-restore-virt-machine/</link>
      <pubDate>Thu, 14 Nov 2024 05:12:34 +0000</pubDate>
      
      <guid>https://ruohai.wang/202411/pve-backup-and-restore-virt-machine/</guid>
      <description>前言 pve上操作虚拟机的备份与还原都可以通过web ui进行操作，非常的简单方便。
备份 在pve的webui中点击需要备份的虚拟机，依次点击备份——立即备份
在弹窗中进行备份的自定义设置。基本上啥都不需要改，全部用默认参数即可。
点击立即备份，会有新弹窗显示备份进度，耐心等待知道出现TASK OK就表示备份完成。
在虚拟机的备份一栏中可以看到本机的备份文件。
在本地存储的备份一栏中也可以看到所有虚拟机的备份文件。
到此就完成了虚拟机的备份。
还原 在pve的webui中，可以通过虚拟机的备份入口，或者从pve目录的备份入口，找到需要还原的虚拟机备份文件，点击还原。
在弹出的窗口中设定还原虚拟机时的参数。
存储：指定虚拟机虚拟磁盘文件的存放位置，留空默认就是和备份虚拟机的存储位置相同 VM：指定虚拟机的vmid，默认即可 唯一：如果用同一个备份文件部署多个虚拟机，需要勾选此项用来生成唯一mac信息，避免局域网内mac地址冲突 其它参数都用默认即可 点击还原后会弹窗显示任务进度，依然是等到出现TASK OK就表明还原成功。
到此就完成了虚拟机的还原。
喝杯奶茶 </description>
    </item>
    
    <item>
      <title>PVE基础操作之：完成装机后的优化/初始化设置</title>
      <link>https://ruohai.wang/202411/pve-initial-config-guide/</link>
      <pubDate>Tue, 12 Nov 2024 09:02:22 +0000</pubDate>
      
      <guid>https://ruohai.wang/202411/pve-initial-config-guide/</guid>
      <description>前言 pve系统的装机没什么难度，和普通debian装机没什么区别，按照默认设置一路下一步就行了，就算有不懂的地方网上也有一大堆教程。
pve装完系统之后就可以登陆webui了，到这一步还有许多设置需要优化，或者叫初始化：
删除local-lvm分区 换源 关闭订阅弹窗提醒 很多次装完pve以后我都要上网找教程，所以自己写篇博客做个记录。
删除local-lvm分区 pve装完系统以后默认会有一个local分区和一个local-lvm分区，默认这俩分区各司其职，比如local用来存镜像文件（iso）、local-lvm用来存磁盘镜像，但这样的结果就是本意是好的，但实际体验反而很不好，比如导致一个分区不够用但另一个分区空荡荡。所以第一步就是删除local-lvm分区。操作分成三步：
第一步：在webui上通过shell访问pve，然后输入以下命令
# 删除分区 lvremove /dev/pve/data # 提示是否删除，敲y Do you really want to remove active logical volume pve/data? [y/n]: y # 重新分配空间 lvextend -rl +100%FREE /dev/pve/root 第二步：在webui中删除local-lvm分区
网图，我的pve系统这个分区已经删除了，所有这里借用alay.cc的图片 第三步：调整local分区的用途
如果你的pve只有一个local分区（或者叫local目录），默认这个分区是不能存放磁盘镜像（也就是虚拟机要用到虚拟磁盘）的，在删除local-lvm分区以后，需要把这个功能添加到local分区。
在内容一栏中，把所有功能都加上即可。
到此就完成了分区空间的合并。
换源 pve默认源是proxmox收费源，不订阅的话无法更新，所以需要更换其它的免费源。
pve需要替换的源一共有三个：
debian proxmox ve ceph 第一步：debian换源。
依然是webui界面通过shell访问pve主机
# 编辑debian源的文件 nano /etc/apt/sources.list 将默认的内容全部注释
#deb http://ftp.debian.org/debian bookworm main contrib #deb http://ftp.debian.org/debian bookworm-updates main contrib # security updates #deb http://security.debian.org bookworm-security main contrib 然后粘贴国内的源，我这里选择用清华的源</description>
    </item>
    
  </channel>
</rss>
