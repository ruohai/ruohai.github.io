<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SSH on 喵ฅ^•ﻌ•^ฅ</title>
    <link>https://ruohai.wang/tags/ssh/</link>
    <description>Recent content in SSH on 喵ฅ^•ﻌ•^ฅ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 28 Jul 2023 10:55:34 +0800</lastBuildDate><atom:link href="https://ruohai.wang/tags/ssh/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux下ssh.socket模式变更SSH端口（终结篇）</title>
      <link>https://ruohai.wang/202307/linux-change-ssh-port-under-ssh-socket/</link>
      <pubDate>Fri, 28 Jul 2023 10:55:34 +0800</pubDate>
      
      <guid>https://ruohai.wang/202307/linux-change-ssh-port-under-ssh-socket/</guid>
      <description>前言 讲真我之前已经写文章记录过了怎么修改ssh的默认端口，不管是ssh.service还是ssh.socket，两个运行模式下的方法都有。
但是 是的，但是，我重装了这么多次的armbian，在ssh.socket模式下调整了n次默认端口，最后发现，无论怎么弄，都会出现问题，弄不好还容易搞得ssh都连不上。
行吧，经过我反复验证，得出最终有效的修改方法，100%有效，绝对有效。
如果你有更好的办法，可以twitter上给我发dm。
方案一：切换到ssh.service 是的，抛弃ssh.socket，回到传统的ssh.service，不要再去管什么socket什么listenstream，就用ssh.service，方便又好用。
# 滚他妈的socket systemctl disable --now ssh.socket # 欢迎service systemctl enable --now ssh.service 然后在/etc/ssh/sshd_config改成自己喜欢的端口就行了。
方案二：我TM就是要用ssh.socket 很好，你清高，你很棒。
办法有没有？还真有，需要在之前的方案上增加几个步骤，算是曲线救国。在ssh.socket运行的状态变更配置，最大的问题是它可能会突然异常停掉，或者重启ssh服务但新端口不生效。所以要让新端口生效的办法，就是先下手为强，上来就停掉ssh.socket，在它不运行的时候改配置，改完了再启动它。
第一步：禁用ssh.socket这个小可爱，换成ssh.service
# 滚他妈的socket systemctl disable --now ssh.socket # 欢迎service systemctl enable --now ssh.service 第二步：配置ssh.socket端口。是的，曲线救国，先tmd换成ssh.service，保证ssh.socket彻底停止，然后配置ssh.socket的端口。
# 新建目录 mkdir -p /etc/systemd/system/ssh.socket.d # 新建端口配置文件 touch /etc/systemd/system/ssh.socket.d/listen.conf 在listen.conf中添加如下内容，记得把12345改成自己喜欢的端口，保存退出。
[Socket] ListenStream= ListenStream=12345 修改完以后，重载服务
systemctl daemon-reload 第三步：从ssh.service换回ssh.socket 是的，所谓的曲线救国就是在这里~
# 老朋友完成任务了，送走 systemctl disable --now ssh.service # 把小可爱ssh.socket接回来 systemctl enable --now ssh.socket 完成这步曲线救国以后，可以查看下ssh的状态，看是否换成了新端口。
systemctl status ssh 第四步：到上面一步，ssh.</description>
    </item>
    
    <item>
      <title>VSCode插件Remote-SSH的使用与体验</title>
      <link>https://ruohai.wang/202307/vscode-remote-ssh-learn-to-use/</link>
      <pubDate>Sun, 23 Jul 2023 02:29:35 +0800</pubDate>
      
      <guid>https://ruohai.wang/202307/vscode-remote-ssh-learn-to-use/</guid>
      <description>前言 久闻vscode插件remote-ssh的大名，很多人用这个组合来进行远程开发。但作为一个水货前java web程序员，我之前并没有兴趣去了解它，一个是因为vscode做java web的ide功能太孱弱，另一个是我当时的工作并不需要我随时oncall上线写代码改bug。
但最近我不是闲下来了嘛，而且经常在用linux，正好有机会可以了解一些错过的热点。
配置 首先当然是在vscode里安装remote-ssh插件了。没啥难度，在扩展商店里搜remote-ssh，排第一那个插件，安装！排在后面的remote-explorer之类插件不用管，等需要的时候vscode会自己安装。
安装完以后，vscode侧边栏会出现一个新的图标，就是remote-ssh的入口惹。
但现在还暂时不能用，需要先配置远程主机的rsa密钥认证，实现免密登录。
这里再简单记录以下配置过程。
先确保windows已经安装了openssh，方法是打开cmd，输入ssh并回车，看是否有命令提示。没安装的话网上搜以下windows下安装openssh，教程很多。 生成rsa密钥、linux中sshd_config文件的配置，我之前已经写过了，【Linux下配置RSA公钥认证登录】。
我本地电脑使用的是windows，文章我也写过了，【Windows下用CMD实现SSH连接】。
完成上面几步之后，点击vscode侧边栏的remote-ssh入口，就可以看到配置好的远程主机了。
选择主机，右键或者点击主机名右侧的小图标，选择当前窗口或者新窗口打开后，短暂的rsa密钥认证之后，就完成ssh远程访问主机了。
连接成功以后。就可以点击侧边栏的【打开文件夹】或者按快捷键ctrl+p，选择需要打开的文件。
选完文件夹之后（我这里直接选了根目录/），然后就可以把这个远程目录在vscode中当作本地文件夹来使用了。 后记 没有体验之前，一直不明白很多人夸赞的vscode + remote-ssh具体是干嘛用的，到底是怎么个远程开发法。今天完成了安装配置和使用，终于明白了，它就是类似用ssh协议把远程主机的指定目录映射到本地当作本地文件夹使用，就像smb/samba和webdav，只是限定了文件管理器和ide都是vscode。它甚至可以直接映射远程linux主机的根目录/。所谓远程开发，也就是本地vscode + 远程主机上的项目文件。
那我想，有没有可能，就不限制于vscode和remote-ssh，而是和smb/samba、webdav一样，通过ssh协议，真的把远程目录映射到本地，作为一个本地文件夹使用，这样的话，ide就可以随便选了。
搜了下，还真有这样的方案，叫做sshfs-win，项目地址：https://github.com/winfsp/sshfs-win</description>
    </item>
    
    <item>
      <title>Windows下用CMD实现SSH连接</title>
      <link>https://ruohai.wang/202307/windows-cmd-use-ssh/</link>
      <pubDate>Sat, 15 Jul 2023 14:51:46 +0800</pubDate>
      
      <guid>https://ruohai.wang/202307/windows-cmd-use-ssh/</guid>
      <description>Windows下有很多终端，收费的，免费的。但很多终端不支持zmodem导致不能使用lrzsz，或者用户协议是限定场景下才免费，亦或者是electron套壳主题不好看。其实windows10已经默认安装openssh客户端，可以直接用系统自带的cmd/powershell/windows terminal来实现ssh访问远程服务器。虽然依然不支持zmodem，但如果你和我一样有三方软件洁癖，或者想严格遵守软件的用户协议，可以考虑cmd来替代那些第三方软件。
如果你的Windows系统没有安装openssh，可以查看这篇【官方文章】进行安装。
然后在cmd中直接敲命令即可。是默认端口22的话，【-p 22】这部分可以省略。
ssh jack@192.168.1.10 -p 22 如果不想每次都敲【root@192.168.1.10 -p 22】这几句，需要在C:\Users\Jack\.ssh\目录下新建一个config文件（文件名就是config，没有后缀），按如下格式写入服务器信息后保存。
Host abc Hostname 192.168.1.10 User jack Port 22 然后就可以在cmd中敲【ssh abc】即可。
如果想实现免密登录，rsa密钥生成、服务器端的配置这里不做赘述，只记录config文件中的配置格式。为方便管理多个主机的rsa密钥对，这里在.ssh目录下新建文件夹abc，rsa密钥对放在其中
Host abc Hostname 192.168.1.10 User jack Port 22 IdentityFile C:\Users\Jack\\.ssh\abc\id_rsa 然后就可以在cmd中敲【ssh abc】即可实现免密登录。</description>
    </item>
    
    <item>
      <title>Linux下修改SSH默认端口</title>
      <link>https://ruohai.wang/202307/set-new-ssh-port/</link>
      <pubDate>Fri, 14 Jul 2023 22:28:56 +0800</pubDate>
      
      <guid>https://ruohai.wang/202307/set-new-ssh-port/</guid>
      <description>前言 这是一篇从搬瓦工vps的typecho搬过来的文章。对内容和格式做了轻微调整。
写这篇文章是因为前两天想动手改linux主机的默认ssh端口，但发现无论怎么改sshd_config文件都无济于事。简中互联网上以关键字ssh、修改端口之类搜出来的文章都千篇一律，再搜端口修改以后无效，出来的内容都说因为selinux。我就在这这个错误的方向上折腾了好久，但实际我的主机压根就没开启selinux。
最后用google搜英文关键字，才找到原因：systemd环境下ssh分为ssh.socket和ssh.service，这俩不同服务的配置文件完全不同。而较新的debian/ubuntu系统用的是ssh.socket。
找到问题原因以后就很好解决了，这里做简单记录。
查看ssh服务类型 要修改ssh默认端口，首先要分清楚自己linux机器的ssh是ssh.socket还是ssh.service。
systemctl status sshd 根据图中出现的ssh.socket字样区分。 ssh.service ssh.service的端口修改很简单，打开配置文件
nano /etc/ssh/sshd_config 找到port的配置进行修改
# 找到这条，默认是注释掉的，这里去掉注释 Port 22 # 添加一行自定义的端口 Port 12345 然后重启ssh服务即可
systemctl restart sshd 测试新端口OK以后，再注释掉旧端口然后重启sshd即可。
ssh.socket ssh.socket配置文件在/lib/systemd/system/ssh.socket，但我建议你千万不要去动原始文件。首先是这个配置文件会在更新openssh的时候被覆盖掉，其次在ssh.socket运行状态下修改配置文件，会导致ssh.socket服务出现异常（停止工作而且无法接受新的连接）。所以正确的配置方式如下
# 新建配置文件目录 mkdir -p /etc/systemd/system/ssh.socket.d 新建配置文件并写入监听端口信息
cat &amp;gt;/etc/systemd/system/ssh.socket.d/listen.conf &amp;lt;&amp;lt;EOF [Socket] # 这一栏需要保留，用来覆盖原配置文件中的22端口 ListenStream= # 这一栏填写新的ssh端口 ListenStream=1234 EOF 最后就是systemd重载服务并重启ssh了。
# 重载服务 systemctl daemon-reload # 重启ssh systemctl restart ssh 这个配置方法的参考来源：
https://askubuntu.com/questions/1439461/ssh-default-port-not-changing-ubuntu-22-10 https://discourse.ubuntu.com/t/sshd-now-uses-socket-based-activation-ubuntu-22-10-and-later/30189/6 从ssh.socket切换到ssh.service 讲真，我虽然已经掌握在ssh.socket模式下配置新端口的方法，但实际操作过程中还是碰到了ssh.socket异常的问题。那不如直接从ssh.socket切换到ssh.service吧！
# 禁用ssh.socket服务 systemctl disable --now ssh.socket # 启用ssh.</description>
    </item>
    
  </channel>
</rss>
