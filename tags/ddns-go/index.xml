<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DDNS-GO on 喵ฅ^•ﻌ•^ฅ</title>
    <link>https://ruohai.wang/tags/ddns-go/</link>
    <description>Recent content in DDNS-GO on 喵ฅ^•ﻌ•^ฅ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 29 Apr 2024 23:55:45 +0800</lastBuildDate><atom:link href="https://ruohai.wang/tags/ddns-go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DDNS-GO通过命令获取有效的IPv6地址</title>
      <link>https://ruohai.wang/202404/ddns-go-use-shell-command-to-get-valid-ipv6-addr/</link>
      <pubDate>Mon, 29 Apr 2024 23:55:45 +0800</pubDate>
      
      <guid>https://ruohai.wang/202404/ddns-go-use-shell-command-to-get-valid-ipv6-addr/</guid>
      <description>前言 使用ipv6 + ddns来实现公网访问部署在自己机器上的网络服务是现在很多nas玩家必备的技能，非常的方便、好用而且免费。
但是在实际使用过程中，我的armbian小盒子经常出现多个ipv6公网地址，有时候是2个，有时候是3个，更有的时候当我在刷机玩openwrt时会短暂出现5个ipv6公网地址。
我用ddns-go来实现ddns，这个软件非常好用，基本能在90%的场景下正常运作。但当我的设备出现3个甚至3个以上的ipv6公网地址时，我不得不一次次的手动去调整，这实在是非常的智障。
我也在网上找了一些获取有效ipv6公网地址的命令，比如【Linux中获取本机的最新IPv6地址_更新ddns的脚本_获取openwrt的IP地址】文章中提供的命令，是根据多个ipv6地址的valid_lft来排序，获取最长有效生命时长的ipv6地址。但我实测并不好用，因为当设备出现两个valid_lft相差不到1秒钟的ipv6地址时（是的，这么稀有的情况我都会碰到而且碰到了好几次），会导致命令筛选处的结果在两个ipv6地址之间反复横跳，引起频繁的dns更新请求，反而让网络服务的访问变得更不稳定。
在网上反复搜索都没有合适的解决方案，那只能自己动手了。
命令 根据我自己使用armbian小盒子近一年的观察，使用ip -6 addr show ifce获取到的ipv6地址，排在最后面的那个就是最新的那个，也就是valid_lft最长的那一个。
所以这个命令的原理就是：用ip -6 addr获取ipv6地址，然后选择排在最后面那一个。
先直接给出结果：
ip -6 addr show eth0 | grep -v deprecated | grep &amp;#39;inet6 [^f:]&amp;#39; | awk -F&amp;#39; &amp;#39; &amp;#39;{print $2}&amp;#39; | awk -F&amp;#39;/&amp;#39; &amp;#39;{print $1}&amp;#39; | tail -1 然后是步骤拆解：
ip -6 addr show eth0，显示网卡（eth0）的全部ipv6地址 grep -v deprecated，去除已经失效（deprecated）的地址 grep &#39;inet6 [^f:]&#39;，只显示ipv6地址的那一行 awk -F&#39; &#39; &#39;{print $2}&#39;，根据空格符号分列，打印第二列 awk -F&#39;/&#39; &#39;{print $1}&#39;，根据斜杠符号/分列，打印第一列 tail -1，显示最后一行 实测不管有多少个ipv6地址，都可以正确获取到最后一个有效的ipv6公网地址。因为这个命令的获取方式并不是根据valid_lft排序，所以也不会出现因为两个ipv6地址因为valid_lft间隔少于1秒钟导致获取到的地址反复横跳的bug。
这个命令已经是我能想到的、能写出来的最精简、最有效的命令了（也许两个awk可以合并成一个）。</description>
    </item>
    
    <item>
      <title>DDNS-GO使用命令获取最新IPv6公网地址</title>
      <link>https://ruohai.wang/202312/ddns-go-choose-the-last-ipv6/</link>
      <pubDate>Tue, 26 Dec 2023 20:20:10 +0800</pubDate>
      
      <guid>https://ruohai.wang/202312/ddns-go-choose-the-last-ipv6/</guid>
      <description>前言 我使用的linux小盒子是迅雷的赚钱宝系列，第一代（ws1408）、第二代（ws1508）、第三代（ws1608）都入手了好几个。
用的公网访问方案是ipv6 + ddns-go。
这个方案免费、好用、方便，而且非常稳定，只是有那么一点点小问题，每次碰到这个bug都需要人工介入处理。
因为这个小问题出现的概率很低，所以之前也一直没当回事，大不了这小概率事件真的发生的时候，手动调整一下，也花不了几分钟。
但是今天，我还是想找找解决方案。
问题 在ddns-go的issue搜到一个帖子，和我碰到的情况一模一样，指路：#872 希望ipv6地址获取可以根据valid_lft或preferred_lft排序选择
具体表现就是：
出现了2~3个公网ipv6地址 只有最新的那个ipv6地址才是有效的 旧的ipv6地址会一直保留直到它的valid_lft有效生命周期结束 参考图例：
原因分析 移动宽带定期（maybe不定期）pppoe重播，导致不断分配新的公网ipv6地址，但旧的公网ipv6地址并没有被主动弃用/注销，所以出现了多个公网ipv6地址共存、但只有最新的那个公网ipv6地址有效的情况。
解决方案 知道原因以后，找解决方案就很简单，只需要动态获取最新的那个公网ipv6地址即可。
ddns-go获取ipv6地址有三种方式：
根据接口 根据网卡 根据命令 第一个方式在出现多个公网ipv6地址的时候会gg，表现就是访问不到接口，导致无法获取ipv6地址。第二个方式只支持最简单的用@1@2@3来指定使用第1、2、3个ipv6地址，如果最多只出现2个ipv6地址的话可以用@2，但如果出现3个ipv6地址，就搞不定了。
所以只有第三个方式了，用命令在动态选择最新的那个ip6v地址。
查看了多个issue以后，还是刚刚提到的这个帖子：#872 希望ipv6地址获取可以根据valid_lft或preferred_lft排序选择，有人提供了自己写的命令。
ip addr show|grep -v deprecated|grep -A1 &amp;#39;inet6 [^f:]&amp;#39;|grep -v ^--|sed -nr &amp;#39;:a;N;s#^ +inet6 ([a-f0-9:]+)/.+? scope global .*? valid_lft ([0-9]+sec) .*#\2 \1#p;Ta&amp;#39;|sort -nr|head -n1|cut -d&amp;#39; &amp;#39; -f2 感谢这位网友提供的命令，实测有效。
参考文章 希望ipv6地址获取可以根据valid_lft或preferred_lft排序选择 #872 通过命令获取IP参考 #531 通过网卡获得ipv6怎么编写正则表达式获得不是第一个的ipv6 #341 通过命令获取IP参考 </description>
    </item>
    
    <item>
      <title>Linux下安装DDNS-GO</title>
      <link>https://ruohai.wang/202307/ddns-go-install/</link>
      <pubDate>Mon, 17 Jul 2023 00:24:52 +0800</pubDate>
      
      <guid>https://ruohai.wang/202307/ddns-go-install/</guid>
      <description>前言 没有前言，懒得写了。
DDNS-GO官方github repo指路：https://github.com/jeessy2/ddns-go
下载 在系统里创建安装目录
mkdir -p /usr/local/ddns-go 根据自己的硬件平台下载对应版本的安装包。我的设备依然是它，赚钱宝二代（ws1508），armv7。
# 进目录 cd /usr/local/ddns-go # 下载 wget https://github.com/jeessy2/ddns-go/releases/download/v5.3.7/ddns-go_5.3.7_linux_armv7.tar.gz # 解压 tar -zxvf ddns-go_5.3.7_linux_armv7.tar.gz 运行 解压以后得到的ddns-go默认就有执行权限，所以直接./ddns-go就可以跑起来了。但我们肯定是要把添加到systemd服务，并设置开机自启的。
# 新建服务文件 nano /etc/systemd/system/ddns-go.service 粘贴以下内容
[Unit] Description=The DDNS-GO Process Manager After=network.target [Service] Type=simple ExecStart=/usr/local/ddns-go/ddns-go -c /usr/local/ddns-go/ddns_go_config.yaml ExecStop=/bin/killall ddns-go [Install] WantedBy=multi-user.target 然后就是大家都喜欢的systemd reload/start/enable三板斧了。
# 重载 systemctl daemon-reload # 启动 systemctl start ddns-go.service # 开机启动 systemctl enable ddns-go.service 配置 ddns-go跑起来以后，默认端口是9876，打开浏览器，访问http://host-ip:9876，就进入ddns-go的webui了，之后就根据自己的需求进行配置。</description>
    </item>
    
  </channel>
</rss>
