<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>File Browser on 喵ฅ^•ﻌ•^ฅ</title>
    <link>https://ruohai.wang/tags/file-browser/</link>
    <description>Recent content in File Browser on 喵ฅ^•ﻌ•^ฅ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 30 Apr 2024 21:21:05 +0800</lastBuildDate><atom:link href="https://ruohai.wang/tags/file-browser/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在刷了OpenWrt的迅雷赚钱宝一代（WS1408）上安装File Browser</title>
      <link>https://ruohai.wang/202404/filebrowser-install-on-ws1408/</link>
      <pubDate>Tue, 30 Apr 2024 21:21:05 +0800</pubDate>
      
      <guid>https://ruohai.wang/202404/filebrowser-install-on-ws1408/</guid>
      <description>前言 迅雷赚钱宝一代，硬件型号ws1408，芯片是大家的老朋友amlogic s805，配了256MB内存，刷机可以后可用存储空间只有72MB左右。
我刷的固件是openwrt 21.02.7，内核3.10.33。
这个硬件配置，这个内核版本，docker肯定是不用想了，所以看看还能装点儿啥软件吧。
安装 这里先吐槽一下filebrowser官方吧，现在官方文档里的安装方式只给了一键脚本和docker两种方式，而且也没有提供比较明白的编写配置的文档，不明白在怎么想的。
第一步：下载
首先找到filebroser项目的github页面【filebrowser/filebrowser】，在releases页面找到正确的安装包。
我们的老朋友s805芯片是armv7/armhf架构，不要选错。
ssh连上openwrt，使用wget下载。我在机器上插了一个sd卡挂载到/mnt/sdcard作为软件安装目录。
# 进目录 cd /mnt/sdcard/filebrowser # 下载 wget -O filebrowser.tar.gz https://github.com/filebrowser/filebrowser/releases/download/v2.29.0/linux-armv7-filebrowser.tar.gz # 解压 tar -zxvf filebrowser.tar.gz 解压以后可以看到filebrowser这个二进制包已经有可执行权限，但是文件的归属权限比较乱，默认是1001:127。
所以先改一下归属用户和组。
# 调整文件的用户和组为root chown -R root:root * 第二步：编辑配置文件
依然是在软件的目录下，开始编辑配置文件
# 新建配置文件 touch config.json # 编辑，没有nano的话可以用vim nano config.json 把下面的代码粘贴进去
{ &amp;#34;port&amp;#34;: 8080, &amp;#34;address&amp;#34;: &amp;#34;0.0.0.0&amp;#34;, &amp;#34;root&amp;#34;: &amp;#34;/&amp;#34;, &amp;#34;database&amp;#34;: &amp;#34;/mnt/sdcard/filebrowser/filebrowser.db&amp;#34;, &amp;#34;log&amp;#34;: &amp;#34;/mnt/sdcard/filebrowser/filebrowser.log&amp;#34;, &amp;#34;username&amp;#34;: &amp;#34;admin&amp;#34; } 配置释义：
port：指定服务使用的端口号 address：指定服务的访问地址，默认0.0.0.0就是监听所有来源的网络请求 root：指filebrowser可以访问的根目录，比如我只想让filebrowser访问/mnt目录下的文件，那就改成&amp;quot;root&amp;quot;:&amp;quot;/mnt&amp;quot; database：指filebrowser的数据库文件存放路径 log：指filebrowser的日志文件的存放路径 username：指初始用户名 以上根据自己的喜好调整即可。
到这一步，可以直接./filebrowser -c config.</description>
    </item>
    
    <item>
      <title>Linux下用Nginx给File Browser设置SSL开启HTTPS访问</title>
      <link>https://ruohai.wang/202307/filebrowser-update-to-https/</link>
      <pubDate>Sun, 16 Jul 2023 00:25:11 +0800</pubDate>
      
      <guid>https://ruohai.wang/202307/filebrowser-update-to-https/</guid>
      <description>前言 我用赚钱宝二代（ws1508）和玩客云（ws1608）刷入armbian，然后搓了很多服务，比如file browser、qbittorrent、ttyd、alist、ddns-go、navidrome。这些应用在启动以后，都提供了webui用来管理和控制。再配合当下ipv6的公网ip，实现了外网访问。
但现在又碰到了新的需求（或者说问题），就是这些应用的webui都是http，为了安全，我准备升级到https。其中有一些应用（比如ttyd、firebrowser）确实支持ssl，但也有很多不支持ssl。而且就算支持ssl的应用，各自配置的方式也不相同，不方便后期统一管理。
为了实现这个需求，就需要使用nginx做反向代理。这里以filebrowser为例，做一下简单记录。
前期准备 设备已经实现了ipv6的外网访问 假定域名为：jackiechang.cn 系统已经安装了filebrowser且可以正常访问，假定访问端口为：8600 以上两个前提已经OK，那外网访问filebrowser的url应该是：http://jackiechang.cn:8600 已经有ssl证书，不管是阿里云买域名送的证书，还是Let&amp;rsquo;s Encrypt的免费证书。 ssl证书需要是nginx的格式，一共两个文件：jackiechang.cn.pem和jackiechang.cn.key。 8600一个端口不能被nginx和filebrowser同时监听，这里假定nginx监听端口是：22222。最终实现效果是：https://jackiechang.cn:22222 这里假定的外网端口、本地端口、域名、证书名称，在下面教程中记得根据自己的情况进行修改。 安装nginx 我的主机系统是armbian，debian仓库里有nginx，直接一键安装。
apt install nginx nginx安装好以后，可以先执行nginx -t测试一下nginx.conf配置文件的语法是否正确，顺便看一下nginx的路径。我的nginx目录是/etc/nginx。
上传ssl证书 在nginx目录新建ssl文件夹，用sftp/scp工具把两个证书文件放到ssl目录下。注意这两个文件的读取权限，因为nginx是以www-data的用户身份运行，这俩ssl文件针对everyone需要配置读权限。但一般不会有什么问题，这里提到权限问题只是以防万一。
mkdir /etc/nginx/ssl 配置nginx nginx的默认配置文件是nginx.conf，但现在为了整洁和方便管理，nginx分出了conf.d、sites-available、site-enabled三个文件夹用来分别存放不同用途的配置文件。目录结构示意图如下。
nginx.conf总文件不动，/sites-enabled/default是实际生效的配置文件，但这里的文件实际是软链接到/sites-avaliable/default。搞得这么复杂，其实是为了方便配置和管理。（真的嘛我不信）
好了，开始编辑配置文件。
nano sites-available/default 添加如下配置内容，然后保存退出。
server { # 监听端口 listen [::]:22222 ssl; # 域名 server_name jackiechang.cn; # 证书 ssl_certificate ssl/jackiechang.cn.pem; ssl_certificate_key ssl/jackiechang.cn.key; # session缓存 ssl_session_cache shared:SSL:1m; ssl_session_timeout 5m; # 加密 ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; ssl_prefer_server_ciphers on; # http请求拦截报错页面，自动跳转到https error_page 497 https://$host:$server_port$uri$is_args$args; location / { proxy_pass http://localhost:8600; } } 重启nginx 完成上面的配置以后，先执行nginx -t测试配置文件的语法，没有报错就说明配置OK，接下去重启nginx即可。</description>
    </item>
    
    <item>
      <title>Linux下安装File Browser</title>
      <link>https://ruohai.wang/202307/filebrowser-installation-guide/</link>
      <pubDate>Fri, 14 Jul 2023 23:00:29 +0800</pubDate>
      
      <guid>https://ruohai.wang/202307/filebrowser-installation-guide/</guid>
      <description>第一步：新建安装目录
mkdir /usr/local/filebrowser 第二步：根据自己的硬件平台从【官方github repo】下载对应版本的安装包，这里以armv7为例。
# 进入安装文件夹 cd /usr/local/filebrowser # 下载安装包 wget https://github.com/filebrowser/filebrowser/releases/download/v2.23.0/linux-armv7-filebrowser.tar.gz # 解压 tar -zxvf linux-armv7-filebrowser.tar.gz 第三步：在安装目录/usr/local/filebrowser下新建config.json，添加配置信息。
# 创建配置文件 nano config.json 添加以下内容。其中root参数用来指定fireborwser展示的根目录，比如设定为/home，则webui中只能看到/home目录下的内容。
{ &amp;#34;port&amp;#34;: 8600, &amp;#34;address&amp;#34;: &amp;#34;0.0.0.0&amp;#34;, &amp;#34;root&amp;#34;: &amp;#34;/&amp;#34;, &amp;#34;database&amp;#34;: &amp;#34;/usr/local/filebrowser/filebrowser.db&amp;#34;, &amp;#34;log&amp;#34;: &amp;#34;/var/log/filebrowser.log&amp;#34;, &amp;#34;username&amp;#34;: &amp;#34;admin&amp;#34; } 第四步：把filebrowser添加到systemd服务。
# 创建配置文件 nano /etc/systemd/system/filebrowser.service 添加如下内容后保存退出。
[Unit] Description=The filebrowser Process Manager After=network.target [Service] Type=simple ExecStart=/usr/local/filebrowser/filebrowser -c /usr/local/filebrowser/config.json ExecStop=/bin/killall filebrowser PrivateTmp=true [Install] WantedBy=multi-user.target 第五步：systemd重载服务并设置开机启动
# 重载服务 systemctl daemon-reload # 启动filebrowser systemctl start filebrowser.service # 设置开机启动 systemctl enable filebrowser.</description>
    </item>
    
  </channel>
</rss>
