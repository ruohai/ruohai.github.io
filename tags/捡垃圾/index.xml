<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>捡垃圾 on 喵ฅ^•ﻌ•^ฅ</title>
    <link>https://ruohai.wang/tags/%E6%8D%A1%E5%9E%83%E5%9C%BE/</link>
    <description>Recent content in 捡垃圾 on 喵ฅ^•ﻌ•^ฅ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 14 May 2024 18:42:33 +0800</lastBuildDate><atom:link href="https://ruohai.wang/tags/%E6%8D%A1%E5%9E%83%E5%9C%BE/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在刷了OpenWrt的迅雷赚钱宝一代（WS1408）上安装Tailscale教程</title>
      <link>https://ruohai.wang/202405/tailscale-install-on-ws1408/</link>
      <pubDate>Tue, 14 May 2024 18:42:33 +0800</pubDate>
      
      <guid>https://ruohai.wang/202405/tailscale-install-on-ws1408/</guid>
      <description>前言 先说明一下我的迅雷赚钱宝一代ws1408（下文称做小方块）刷的系统是openwrt 21.02.7（文章末尾有下载链接），内核3.10.33。
之前没有想到这个小方块的可玩性还挺强，因为内核太老、内存太小导致没有什么可用的固件，只能基于现有的openwrt固件来屎上雕花，让它继续发光发热了。
tailscale官方只提供了一键安装的脚本，那我们只能找第三方编译好的安装包了，项目地址：【Azathothas/Static-Binaries】。
有了已经编译好的安装包，那我们就开始吧！
安装 【Azathothas/Static-Binaries】项目的release页面提供的二进制包，不仔细看还以为同样的包提供了两份，仔细看一个是tailscale，另一个是tailscaled。
根据我浅薄的linux使用经验，名称中带d的那个肯定就是守护进程的版本惹。
项目的手册中提供了安装教程，地址【Install TailScale】，英文阅读无障碍的话直接看项目手册就行。
根据我实际安装的经验，tailscale不带d的这个安装包，是用来进行初始化配置的（比如设置子网路由、关联tailscale账号），tailscaled带d的安装包，是实际运行的服务程序。所以，想要跑tailscale，需要两个安装包都下载到本地。
不过项目的release页面还提供了merged版本，看名字我觉得是二合一版本，但实际测试发现还是俩包分开的比较容易上手，所以这篇文章不聊这个merged版本。
第一步：下载
小方块用的芯片是我们的老朋友amlogic s805，硬件架构是arm32/armv7l/armhf，固件openwrt用的init系统是sysv，根据这些信息找到正确的安装包：
注意有两个安装包，一个是初始化配置用的、不带d的tailscale，一个是带d的tailscaled。
# 下载tailscaled wget -O tailscaled https://github.com/Azathothas/Static-Binaries/releases/download/tailscale_v1.66.1/tailscaled_arm_abi_Linux # 下载tailscale wget -O tailscale https://github.com/Azathothas/Static-Binaries/releases/download/tailscale_v1.66.1/tailscale_arm_abi_Linux # 给俩文件添加可执行权限 chmod +x tailscale tailscaled 到这里，下载的步骤就完成了。
第二步：将tailscaled添加为sysv服务
网上搜了一圈没找到tailscale的sysv配置文件，所以根据以往经验，再参考systemd版本的配置文件，可用的sysv配置文件如下。我的tailscale文件保存在/mnt/sdcard目录下，请根据自己的实际情况调整这个路径。
# 进入目录 cd /etc/init.d/ # 创建配置文件 touch tailscaled # 编辑配置文件(没有nano可以用vim) nano tailscaled 然后把这段代码粘贴进去，保存退出。
#!/bin/sh /etc/rc.common START=96 STOP=10 SERVICE_WRITE_PID=1 SERVICE_USE_PID=1 SERVICE_DAEMONIZE=1 start() { service_start /mnt/sdcard/tailscale/tailscaled --state=/mnt/sdcard/tailscale/tailscaled.state --socket=/mnt/sdcard/tailscale/tailscaled.sock --port=123456 } stop() { service_stop /mnt/sdcard/tailscale/tailscaled --cleanup } 最后给文件添加可执行权限并启动</description>
    </item>
    
    <item>
      <title>Linux使用badblocks扫描&amp;屏蔽硬盘坏道</title>
      <link>https://ruohai.wang/202404/badblocks-check-guide/</link>
      <pubDate>Sat, 20 Apr 2024 18:02:41 +0800</pubDate>
      
      <guid>https://ruohai.wang/202404/badblocks-check-guide/</guid>
      <description>前言 最近从pdd上入手了10多片拆机硬盘，都是250gb的hdd，到手以后用crystal diskinfo看了下参数，fujitsu(富士通）硬盘，sata150速率，生产日期2009。
这些硬盘应该都是从联想笔记本电脑上拆下来的，pdd商家没有做格式化只直接卖给了我这样的捡垃圾爱好者，所以在这十多片硬盘里我看到了好多原用户的各种资料，很多cad图纸、cmmb项目计划、家人旅游照片、小孩满月照片、结婚照等等，最离谱的是竟然还有gv/av。
翻阅别人的隐私内容肯定是不正确的，在正式开始扫描硬盘坏道之前，对这些硬盘做了简单格式化。
下面开始简单记录下处理硬盘坏道吧。
扫描坏道 首先用badblocks扫描硬盘，常用参数
-b, 指定磁盘区块大小，单位byte，理解为最小扫描单位 -o，指定扫描结果的输出路径 -s，检查时显示进度 -v，检查时显示详细的信息 -w，检查时执行有破坏性的写入测试，注意这个操作会破坏硬盘上的数据，请提前做好数据备份 -n，检查时执行没有破坏性的写入测试 一般情况下只需要以下命令即可，默认检查区块大小是4096bytes。注意，无论是-w还是-n，写入测试都会非常非常非常的耗时，建议只用默认的读测试扫出坏块以后再针对坏块做写测试。
badblocks -sv -o badblocks.log /dev/sda 如果想要指定检查区块大小，做到每一个sector应检尽检，可以用-b指定区块大小
badblocks -sv -b 512 -o badblocks.log /dev/sda 想要知道自己的硬盘的区块大小，可以用fdisk查看
fdisk -l /dev/sda 在输出结果中可以看到硬盘的区块大小是多少
屏蔽坏道 扫描结束以后，再用e2fsck把坏道屏蔽。
e2fsck -l badblocks.log /dev/sda 这个方案比较软，就是把扫描出来的坏道数据添加到文件系统的黑名单里，适合硬盘上已经有数据的情况。
还有个方案比较硬，用badblocks往指定范围的区块上写入数据，写入失败时硬盘会自动重新映射，这个方案适合硬盘上没有数据的情况。
badblocks -wsv /dev/sda [END] [START] 注意[END]是结束区块编号，[START]是开始区块编号。
一键扫描+屏蔽 工具e2fsck也支持硬盘坏道的扫描 + 屏蔽，命令如下
e2fsck -vc /dev/sda 参数释义：
v，显示结果 c，扫描坏道&amp;amp;屏蔽坏道 命令中可以有两个c，是因为archwiki的文章中提到，一个c是只有读测试，两个c是非破坏性的读&amp;amp;写测试(咦怎么让我想到了氧气姐，氧原子它是一个O&amp;hellip;)
所以上面这条命令就等于
badblocks -sv /dev/sda &amp;amp; e2fsck -l $ /dev/sda 参考文章 ArchWiki:badblocks Linux badblocks命令 badblocks命令 – 检查磁盘装置中损坏的区块 linux修复磁盘坏道(本教程完全来自实例、实测，具体参数请根据个人情况修改) </description>
    </item>
    
    <item>
      <title>贝壳云P1刷机Armbian小白教程</title>
      <link>https://ruohai.wang/202404/beikeyun-install-armbian/</link>
      <pubDate>Thu, 18 Apr 2024 15:17:01 +0800</pubDate>
      
      <guid>https://ruohai.wang/202404/beikeyun-install-armbian/</guid>
      <description>前言 最近又双叒叕从海鲜市场入手了一个，嗷，不是一个，是入手了两个矿渣，型号是贝壳云p1，价格是两个打包120rmb。😂
它长这个样子。
正面
背面
在网上搜刷机资料的时候，发现这机器在2020年左右已经是非常热门的矿渣，因为它给了四个usb3.0 + 千兆网口，这配置在一众捡垃圾设备里完全是鹤立鸡群的存在，所以早早的就有大佬给他适配了各种固件。
设备到手依然是先刷机，这里做个简单记录。
准备工作 贝壳云p1刷机比我之前玩过的矿渣都更复杂一些，它除了需要拆机短接，还需要从主板上的usb焊盘上引出一个usb接口，要不然没法刷机。所以完整的刷机工具如下：
硬件
家用电烙铁（没有的话可以用胶布临时应急） 一根剪线的usb线缆 镊子或者回形针（用来短接） 软件
贝壳云p1的bootloader rockchip驱动程序DriverAssistant rockchip开发工具AndroidTools armbian固件，ophub/amlogic-s9xxx-armbian项目已经适配了贝壳云，可以到项目主页根据型号下载，【项目地址】 软件工具打包在文章末尾有下载连接
刷机 第一步：拆机
先抠掉背面的三个橡胶脚垫
然后卸掉三颗螺丝
然后用撬片或者手指甲解开上盖的卡扣，这里注意上盖扣的比较紧，注意巧劲
上盖可以拿起以后不要太用力，led灯的排线要解开
主板上还有一颗螺丝卸掉
到这里整个主板就可以取下来惹。
第二步：接usb线
贝壳云刷机首先要接出主板焊盘上的usb线，所以最好准备一个家用电烙铁，可以减少很多麻烦。但如果你和我一样没有家用电烙铁，但又着急想立刻刷机，那可以试试用，emmm，胶布和手。
首先要准备一根剪线的usb，里面四根线芯，黑白红绿。其中红线是usb的5v供电线。我因为是没有电烙铁而是用胶布粘的，怕供电不稳影响刷机，所以这里剪掉了红线，改用充电头dc供电。
然后根据黑-绿-白-红的线序用电烙铁焊到四个焊点上（没有电烙铁可以用胶布贴住）
第三步：安装软件
安装驱动
启动AndroidTool软件，在boot一栏中，选择rk3328_loader_v1.14.249.bin文件，在system一栏中，选择自己下载的armbian镜像文件。
第四步：开始刷机
如果usb红色线芯焊上了，操作步骤：短接——usb插电脑
如果usb红色线芯没焊，操作步骤：usb插电脑——短接——插电
短接点见图
如果你和我一样用胶布应急方案，那需要注意：
从此时开始全程需要用手按住这几根线芯，因为胶布固定不够稳定，很容易接触不良导致电脑无法识别 如果电脑提示无法正确识别usb设备或者不支持的usb设备，那说明usb线芯接触不良（尤其是白色线芯） 此时软件上会显示发现一个maskrom设备
点击【高级功能】，点击【进入maskrom】。
之后软件会显示设备重启然后红字连接失败之类，不用在意，回到【下载镜像】，点击【执行】，右侧会显示开始刷机进度。
等最后显示【下载完成】，整个刷机过程就结束惹，重新通电开机，就进入armbian系统。
软件下载 百度网盘下载连接：https://pan.baidu.com/s/1DGoQPH7VZK4YMlWw6uFQbA
提取码：gzyh</description>
    </item>
    
    <item>
      <title>私家云二代/比特米盒/CumeBox2刷机Armbian教程</title>
      <link>https://ruohai.wang/202404/cumebox2-install-armbian/</link>
      <pubDate>Mon, 15 Apr 2024 19:42:52 +0800</pubDate>
      
      <guid>https://ruohai.wang/202404/cumebox2-install-armbian/</guid>
      <description>前言 又从海鲜市场花了48rmb入手了一个矿渣盒子，或者叫轻nas盒子，名称很多，私家云二代、比特米盒、cumebox2，其实就是同一个产品，就像玩客云也被叫做赚钱宝三代。
这盒子扩展接口非常丰富，有两个a口usb2.0，一个typec，一个sd卡槽，一个hdmi，一个百兆网口，然后盒子里面还有两个2.5寸sata硬盘仓。
千万不要奢望这盒子的usb口/typec口/sata口能有高速率，都是usb2.0啦。而且网口也是百兆，就算是给usb3和sata3也是只就跑满百兆带宽10MB/s左右而已。
这个盒子都说是照抄的国外一个叫做khadas-vim1的硬件，所以khadas-vim1的armbian固件可以直接拿来用，不过khadas的固件没有适配液晶屏和散热风扇，wifi、蓝牙什么的我还没测，不清楚有没有适配。
就不多吐槽了，简单记录下这玩意怎么刷机吧。
准备工作 这个机器大概是因为可玩性太差，没有大佬给它适配一键线刷固件，所以整个刷机过程比较曲折，需要准备的软件工具比较多。
软件
amlogic usb burning bools 切换卡载系统V1.0.apk atv6.img Armbian_5.77_Aml-s905_Ubuntu_bionic_default_5.0.2_20190401.img 最新的khadas-vim1-armbian镜像，下载地址：【Khadas VIM1】 我用的是当下最新的版本，Armbian_24.2.1_Khadas-vim1_bookworm_current_6.6.16_minimal.img。
打包好的软件工具在文章末尾有下载连接。
硬件
镊子（用来短接） typc数据线一根（用来线刷） 两个u盘（sd卡也可以） 开始刷机 这机器因的刷机过程分成三个阶段：
第一阶段：制作引导u盘
准备【第一个u盘】，用rufus之类软件刷入Armbian_5.77_Aml-s905_Ubuntu_bionic_default_5.0.2_20190401.img这个镜像。 u盘镜像写好以后，用disk genuis或者其它支持的软件访问u盘上的文件，修改boot目录下的uEnv.ini文件，修改其中内容，将dtb/meson-gxl-s905x-khadas-vim.dtb改成dtb/meson-gxl-s905x-p212.dtb，保存退出 好了，引导u盘道这里制作完成，下文称之为【第一个u盘】。
第二阶段：准备卡刷apk和系统镜像
准备【第二个u盘】，文件系统最好是fat32，我不清楚atv6这个安卓电视系统能不能识别ntfs/exfat这俩格式。 把切换卡载系统V1.0.apk和armbian官方下载的Armbian_24.2.1_Khadas-vim1_bookworm_current_6.6.16_minimal.img镜像文件复制到u盘里。 好了，第二个u盘制作完成，下文称之为【第二个u盘】。
第三阶段：开始刷机
用镊子短接触点后，用amlogic usb burning tools线刷atv6安卓电视系统。注意事项：进入电视系统以后需要遥控器进行操作，如果没有遥控器，可以插鼠标。 短接点所在位置
短接点
盒子通电开机，进入atv安卓电视系统。 把第二个u盘插到机器上，然后在电视系统的文件浏览器中找到切换卡载系统V1.0.apk文件，点击安装。 如果你和我一样是插鼠标操作，记得安装完apk以后不要点done，因为鼠标没法返回上一级，请点击open，会出现弹窗让选择老司机还是新司机，到这个界面后暂停操作。 拔掉第二个u盘，插上第一个u盘，然后点击上一步的弹窗，选择新司机 出现弹窗申请root权限，选择永久授权。盒子会自动重启，进入u盘上的ubuntu系统 在路由器管理后台中找到盒子的ip，名称应该是aml，然后ssh连上去，账户root，密码1234，连上以后进行简单的初始化配置 再插上第二个u盘，把u盘挂载到系统 用dd命令把armbian的镜像文件写入到emmc。 dd if=/mnt/Armbian_24.2.1_Khadas-vim1_bookworm_current_6.6.16_minimal.img of=/dev/mmcblk1 dd命令执行完成后，拔掉全部u盘，拔电重启，就进入armbian系统惹。 刷机软件下载 百度网盘：https://pan.baidu.com/s/1mOk0h1zT2oJSoGlFcfYmZA 提取码：5mk0</description>
    </item>
    
    <item>
      <title>黑豹X2（Panther X2）刷入Armbian系统</title>
      <link>https://ruohai.wang/202403/panther-x2-flash-armbian/</link>
      <pubDate>Tue, 12 Mar 2024 18:20:47 +0800</pubDate>
      
      <guid>https://ruohai.wang/202403/panther-x2-flash-armbian/</guid>
      <description>前言 前段时间逛海鲜市场的时候留意到一个矿渣盒子，黑豹x2，又是一个类似迅雷赚钱宝这样的挖矿项目已经gg的定制硬件盒子，目前海鲜市场的价格大概在135rmb左右。去年的时候好像价格只要70rmb，现在价格差不多已经翻一倍了。😂
硬件配置是rockchip 3566 + 4gb内存 + 32gb 内置emmc闪存 + tf卡扩展 + 千兆网口 + usb2.0接口，没有视频输出接口，原封包装的话自带一张64GB闪迪tf卡，12v/2a的dc供电。
这个硬件配置，cpu性能在一众盒子里算比较顶，内存和闪存给的都比较充裕，而且支持tf卡扩展，aarch64/arm64架构，在很长一段时间里都不用担心性能瓶颈，更不用担心像玩客云的arm32/armv7l架构缺少第三方应用支持。不过鸡肋的地方也很多，比如usb接口只是2.0而且只给了一个，没有hdmi/dp没法当电视盒子用，只有单个网口不能当软路由。
ophub的项目amlogic-s9xxx-armbian中已经有这个盒子的armbian固件，本文中提到的armbian固件都从这个项目中下载。
卡刷 黑豹x2刷机有两种方法，第一种是卡刷，这种方法比较简单而且不需要特殊工具。
第一步：u盘/tf卡引导
用rufus把armbian固件写入tf卡或者u盘，然后插到机器上后通电，等待半分钟后可以在路由器后台看到新增armbian设备的ip，然后ssh连上设备。
如果不需要把系统写入emmc，到这一步就可以直接使用了，也就是把u盘/tf卡作为存储介质。
第二步：固件写入内置emmc
这个操作和amlogic芯片的电视盒子有区别，无法直接用armbian-install来完成了。
在上一步tf/u盘中的系统成功启动以后，需要用dd命令直接将armbian固件（eg：Armbian_24.5.0_xxx.img）写入到内置的emmc上。写入完成后，关机拔掉tf卡/u盘，再通电开机，就进入emmc上的armbian系统惹。
dd if=Armbian_24.5.0_xxx.img of=/dev/mmcblk1 bs=1M status=progress 线刷 线刷需要准备：
双公头usb线 rockchip驱动程序DriverAssitant rockchip开发工具RKDevTool rk356x的bootloader文件 刷机工具包下载地址在文章最后。
第一步：电脑安装驱动
第二步：选择固件
启动RKDevTool软件，在boot一栏中，选择rk356x-MiniLoaderAll.bin文件，在system一栏中，选择自己下载的armbian镜像文件。
第三步：开始刷机
设备不要通电。用卡针长按盒子的reset，然后连接双公头usb线，电脑会有叮咚提示音，在瑞芯微开发工具中会显示发现一个LOADER设备。 点击【高级功能——进入maskrom】让设备重启。 点击【下载镜像——执行】开始刷机。 提示下载完成即为刷机完成，可以拔掉双公头usb线缆，然后通电开机。 参考文章 PantherX2(黑豹X2)刷机。注：本文中有5张图片都引用自这篇博客，因为我刷机的时候没有截图，事后也懒得重刷补图。这里感谢 rupu.net 的辛苦制图。 百元矿渣Panther X2（黑豹 X2）：小白折腾日记1 资源包 百度网盘：【Panther-X2-刷机工具.7z】 提取码: 7e4a</description>
    </item>
    
    <item>
      <title>创维电视盒子E900V22D刷入Armbian系统</title>
      <link>https://ruohai.wang/202402/e900v22d-install-armbian-to-emmc/</link>
      <pubDate>Tue, 20 Feb 2024 13:00:45 +0800</pubDate>
      
      <guid>https://ruohai.wang/202402/e900v22d-install-armbian-to-emmc/</guid>
      <description>前言 我手上现有的垃圾盒子都是arm32/v7l的cpu架构（迅雷赚钱宝一代/二代/三代），虽然debian12甚至下一个debian13依然会继续支持arm32，但很多我使用的软件和docker镜像已经不再支持arm32/v7的硬件了。
所以从闲鱼入手了一个电视盒子，型号是创维E900V22D，拆机确认芯片型号的S905L-3，aarch64架构，2GB内存 + 8GB emmc存储，百兆网口，2个usb2.0接口。
这机器入手价格是40rmb（加上邮费），一开始觉得性价比高，因为E900V22D按理是s905l-3a/3b的芯片，但我拆机以后发现是s905l-3，编号少了一个a和b，性能也差一大截。实际这个芯片的盒子价格应该在25rmb（不含邮费）左右，对应的热门盒子型号是cm211-1。所以我一不小心被割了韭菜，怒亏10rmb。
在海鲜市场淘电视盒子的时候，除了挑机器型号之外，一定要问清楚cpu芯片。因为电视盒子全国不同地区、不同厂家，可能同一个型号的机器会出现硬件配置不同的情况。高价买到低配还不是最麻烦的，最麻烦的是，因为相同型号但不同硬件的电视盒子，很可能设备树dtb就不一样，那对应的刷机固件、刷机方法也会不一样，比如我淘的这个E900V22D。
因为我的盒子型号和cpu芯片与ophub的amlogic-s9xxx-armbian项目中现有的支持设备也对应不上，所以刷机过程中也碰到了一点儿小问题，不过最后还是完美刷入了armbian。
这里做个刷机步骤的简单记录，方便以后回溯。
拆机 拆机这一步主要是为了确认芯片型号，避免同型不同芯。
首先卸掉背壳的三颗螺丝，然后用撬片插入撬孔就可以掀开真个背壳。
确认了芯片型号是s905l-3。
固件 在amlogic-s9xxx-armbian项目主页，根据自己的芯片型号，确定使用amlogic_s905l3.img这版固件。
然后在release页面，根据自己的喜好下载对应版本的armbian。我一直用的debian bookworm版。
在固件列表里选择自己喜欢的内核版本，注意选择s905l3的固件。
下载固件以后，使用软件（比如rufus）把固件烧录到u盘即可。
刷机 需要的设备
使用s905l-3芯片的创维E900V22D，刷机不需要短接，只需要用到遥控器，如果手头没有原装的遥控器，可以使用支持红外的手机（比如小米）的万能遥控app来控制。如果确实没有遥控器，不要紧张，还有方法的，可以通过短接线刷安卓tv底包 + adb工具来刷机，这个等下文【踩坑】部分有记录。
刷机的方法
刷好固件的u盘插在离电源近的usb接口，先按住遥控器的右方向键（网上的教程都说是一秒钟按三次右键）然后通电，盒子就会自动从u盘引导，此时如果hdmi接口连接了显示器，显示的是如下图的花屏。
无需紧张。耐心等待一段时间之后，就可以在路由器的控制台看到多了一个名字是armbian的设备，此时就可以根据ip地址通过ssh连上盒子了。
假定ip地址是192.168.1.5，连接方式：打开ssh终端（Windows上可以直接用系统自带的cmd），输入ssh root@192.168.1.5然后回车即可。默认账户root，默认密码1234。
将armbian刷入内置的emmc存储
从u盘引导系统成功以后，此时的armbian系统是跑在u盘上的，需要将系统写入到电视盒子内置的emmc存储。
输入命令
armbian-install 接下去比较重要的选项是选择设备列表
选择设备列表，重点其实是选择对应的设备树dtb文件来驱动硬件。根据ophub在【这个issuse】下的回复，选择120、122、123都可以，因为这仨编号对应的dtb文件都是一样的。
到此整个给电视盒子刷armbian的流程就结束了，你已经拥有了一个超低功耗、arm64机构、2GB内存、8GB存储、2个usb2.0接口、1一个百兆网口的超级小巧的linux服务器惹，赶紧用它来搞一些有意思的自建服务吧。
踩坑 在第一次给这个设备刷机的时候，整个过程和上面的流程记录的一样，完成的非常顺利，按遥控器右键 —— 进入u盘系统 —— 写入emmc。但在写这篇博客的时候，我想重刷一遍armbian，结果碰到了大量的坑，耗费了大量的时间去排查。在这里做简单记录。
踩坑1：已经刷入了armbian，二刷时无法从u盘引导
因为刷入armbian以后，已经不支持通过按遥控器右方向键来选择u盘引导，这个时候就要想其它办法。
看下ophub给出的【手册的12.4.2条】。
如果以上两种办法都走不通的情况下，比如不会优先从usb引导、无法登录当前armbian系统、忘记了root账号密码、获取不到root权限，要怎么处理。
这种情况其实已经说这台设备变砖了，必须要通过短接来救活，在【这个issue】下有人给出了解决方法。
但是，但是啊，不要高兴的太早了，这里接下去还有坑，因为我就碰到了刷入这个安卓tv的底包以后，能开机也能进入安卓电视系统，但是无论我怎么按遥控器右键都无法实现u盘引导，这就是第二个大坑。
踩坑2：已经通过短接刷入了安卓tv底包，但按遥控器右方向键无法实现u盘引导
这种情况下就需要通过adb工具来实现u盘引导。
查看ophub提供的【手册的12.4.1条】。
电视盒子通电，进入安卓tv系统以后，在路由器控制台获取ip地址，假定192.168.1.5，输入以下命令：
adb connect 192.168.1.5 adb shell reboot update 此时盒子会重启并从u盘引导，就可以成功的刷入armbian惹。
但是！不要开心的太早了！接下去依然有坑，这就是第三个大坑。
踩坑3：用户权限异常/sudo命令提示文件归属权异常/su切换root用户提示密码错误
踩过了上述的所有坑、耗费了大量时间和精力以后，我终于看上去成功的给这个盒子刷入了armbian，似乎已经大功告成了，但很快又一盆冷水泼面而来。
具体问题如下：
从普通用户用su命令切换到root用户时，虽然输入了正确的root密码，但一直提示认证失败。同样的密码，可以正常以root用户连接ssh，说明密码是正确的。
在普通用户身份下，使用sudo命令，提示sudo: /etc/sudo.conf is owned by uid 1023, should be 0，大致如下图</description>
    </item>
    
    <item>
      <title>用systemd实现存储设备的开机自动挂载</title>
      <link>https://ruohai.wang/202401/systemd-auto-mount-sdcard/</link>
      <pubDate>Tue, 09 Jan 2024 16:12:05 +0800</pubDate>
      
      <guid>https://ruohai.wang/202401/systemd-auto-mount-sdcard/</guid>
      <description>前言 想要在linux系统上实现开机自动挂载磁盘，有好几种实现方案。我之前用过自动的udevil，也用过直接编辑/etc/fstab。
但是这俩办法各自有点儿小缺陷：
udevil，首先这包很久没更新了，然后好像是挂载exfat有点儿bug，需要自动再配置文件中调整下exfat相关的参数，其次玩客云上的sd卡槽插入sd卡，开机后首次无法自动挂载，需要手动重新插拔一下sd卡才能正常工作。 fstab，这个方法简单方便有效，但换盘以后如果忘记改fstab的配置，很容易让系统启动以后因为文件系统错误导致gg，需要进入修复模式修改fstab才能正常启动。 最近在网上找了一些其它解决方案，最后决定用systemd来实现开机以后自动挂载存储设备。
实现 假定我要实现sd卡的开机自动挂载，sd卡上的存储分区是/dev/mmcblk0p1。
首先要确定sd卡的硬件挂载点，比如我准备把sd卡设备挂载到/mnt/sdcard目录下。
第一步：创建systemd的mount配置文件
systemd配置文件存放目录/etc/systemd/system，在次目录下新建配置文件。
sudo touch mnt-sdcard.mount 注意点：
文件名规则设定，mnt-sdcard由挂载路径/mnt/sdcard转化而来，斜杠‘/’要转换成短杠‘-’ 文件后缀名是.mount而不是.service 第二步：编辑配置信息
编辑mnt-sdcard.mount，录入以下内容：
[Unit] Description=sdcard auto mount After=network.target [Mount] What=/dev/mmcblk0p1 Where=/mnt/sdcard Type=ext4 Options=defaults [Install] WantedBy=multi-user.target 参数释疑：
What: 被挂载设备文件全路径 Where: 挂载点全路径 Type: 文件系统类型 Options: 挂载选项 第三步：启用
完成以上配置后，重新加载systemd配置然后启动即可。
systemctl daemon-reload systemctl start mnt-sdcard.mount systemctl enable mnt-sdcard.mount 注意事项 用systemd实现存储设备自动挂载的实现非常的简单好用，而且也不会轻易导致系统gg。
但是这个方案依然有它自己的小问题：如果外挂了多个存储设备，比如/dev/sda1、/dev/sdb1、/dev/sdc1，那系统重启的时候可能出现盘符名称不固定的问题，也就是A设备本次是/dev/sda1，下次重启以后可能会变成/dev/sdc1。这时候systemd的挂载脚本没法这么智能的去分辨哪个设备对应哪个配置，只会机械的按照配置去挂载，最后导致错误挂载然后文件错乱。
参考文章 systemd 之 开机自动挂载 Systemd 开机自动挂载硬盘 </description>
    </item>
    
    <item>
      <title>在玩客云上用Docker部署Cloudflare Tunnels实现内网穿透（一）</title>
      <link>https://ruohai.wang/202401/cloudflared-deploy-on-onecloud-1/</link>
      <pubDate>Sun, 07 Jan 2024 21:31:55 +0800</pubDate>
      
      <guid>https://ruohai.wang/202401/cloudflared-deploy-on-onecloud-1/</guid>
      <description>前言 朋友们，2024年新年快乐~ 🎉
之前我在迅雷赚钱宝、玩客云这些armv7l系统架构、即将被放弃支持的电子垃圾上部署网络服务，公网访问的解决方案是【廉价域名 + ddns + ipv6】，因为我当前使用的中国移动宽带支持ipv6 + 提供了公网ipv6地址。这个方案很好用也很方便，公网访问服务也能达到宽带的上行带宽上限，但这方案也不是没有遗憾的地方：
国内很多老旧路由器，甚至新出厂的路由器，都默认关闭了ipv6功能，导致无妨访问我的自建网络服务 国外很多运营商不支持ipv6，导致我的自建服务内容项分享给国外好友的时候无法访问 国内宽带运营商屏蔽80/443端口，导致想要访问我的自建网络服务必须在域名后面加端口号 动态ipv6公网地址在dns解析生效上有滞后，导致服务有时候中断 我的赚钱宝系列和玩客云系列，经常会出现多个未过期、未注销的ipv6公网地址，但只有最新分配的那个才是有效的，这种情况ddns-go默认无法处理，需要自己写脚本选择真实有效的那个ipv6地址。 后来接触到了tailscales、frp、ngrok、zerotier，意识到如果自己拥有一台vps，就可以实现不需要端口号直接访问内网的自建网络服务（当然国内特情下需要完成备案）。当时我的twitter账号还没有被炸，推友告诉我，有免费的cloudflare tunnels方案实现同样的功能。但我这人又懒又拖延症，直到这周，才打起精神开始学习部署。
自己成功部署了cloudflare tunnels以后，发现整个过程非常简单，官方的安装引导已经非常直白易懂。但实际操作过程中，对于一些不熟的步骤，我还是卡了好久，也趟了几个坑。所以做个简单记录。
准备 想要实现cloudflare tunnels（以下简称tunnels）做内网穿透，需要提前准备：
一个域名 一个cloudflare账号 一张信用卡 步骤 整个部署过程，大致分成几个步骤：
注册一个cf账号 新建tunnels服务 信用卡验证 选择免费方案 在自己的机器上安装cf客户端 将域名的dns解析托管给cf 在tunnels中配置公网域名转发 耐心等待配置生效 部署 这两天又中流感了，咳嗽流鼻涕发热，先写到这里。下次来补充细节。
等不及的可以看最后参考文章中的链接。
参考文章 少数派：CloudFlare Tunnel 免费内网穿透的简明教程 </description>
    </item>
    
    <item>
      <title>升腾C92破解(刷写)BIOS</title>
      <link>https://ruohai.wang/202312/centerm-c92-update-bios/</link>
      <pubDate>Tue, 19 Dec 2023 16:24:16 +0800</pubDate>
      
      <guid>https://ruohai.wang/202312/centerm-c92-update-bios/</guid>
      <description>前言 最近又从海鲜市场入手了一个小盒子，升腾c92，cpu是j1900，2+8的内存/硬盘，不带电源130rmb。
现在闲鱼上130这个价格一般是j1800的版本，j1900的价格已经上探到180左右。没办法，j1900太热门了，虽然早已经有接班的j4125、n100，但目前还是溢价严重。
我收到的这个c92还是原版bios，默认不支持u盘启动，所以要改造一下。
注意：本文图片只支持ipv6，如果你的网络不支持ipv6的话图片会无法显示。
简单列一下升腾c92的硬件配置：
供电是dc口，5521规格，12v/3a 只有一个msata硬盘接口 只有一个内存插槽，支持笔记本ddr3内存条 usb2.0接口5个 usb3.0接口1个 千兆rj45网口1个 dp口1个，dvi口1个 音频输入口1个，音频输出口1个 cpu有两个版本，2c2t的j1800，还有4c4t的j1900，注意区分，这俩cpu性能差了50% 吐槽 首先不得不吐槽国内玩电子垃圾的氛围，都喜欢搞论坛、qq群把资源私有化，动辄就是邀请制、收费下载、加密提取码。这种模式下，资源很容易失效，非常不利于资源的累积和分享，对新人小白也非常的不友好。一个电子垃圾一旦过了热度期，想再折腾想找资源就变得很难。
刷BIOS c92的bios刷机主要参考这个视频：刷BIOS，装第三方系统，升腾C92瘦客户机折腾记。
但视频这种形式我不喜欢，需要反复拖动进度条来查看有用的那点儿信息，所以做了简单整理。
第一步：下载bios升级文件
up提供了c92的bios升级文件，指路：升腾C92Bios升级文件
他把文件托管在迅雷云盘，需要装迅雷以后才能下载，或者用油猴脚本提取下载链接，自己想办法吧。
下载以后解压，里面3个压缩包
解压c92和fpt这俩压缩包，得到3个文件，这仨文件就是最终需要用到的。
第二步：准备u盘
需要一个u盘，格式化成fat32格式。将上一步解压得到的三个文件，复制到u盘根目录。
目录结构如下：
----- |-- c92_txe1.1_lastucodevbios.bin |-- fparts.txt |-- fpt.efi 第三步：刷新bios
u盘插上c92，开机，按f2进入bios界面。
选择save &amp;amp; exit标签，选择launch efi shell from filesystem device。然后会进入shell界面。
在shell界面敲map，会列出所有存储设备，查看u盘的设备号，一般是fs0。
敲fs0:后回车，进入u盘目录。
进入u盘目录后，可以敲ls查看文件列表，确认当前是在正确的目录。
先备份原始bios，敲命令fpt -d backup.bin，等进度条跑完就完成了原始bios备份。
刷新bios，敲命令fpt -f c92然后按tab自动补全文件名，回车，等进度条跑完即完成bios刷新。
输入命令exit退出shell
到这里就完成了bios刷新。此时可以看下是否回到bios界面，如果不是，可以直接断电重启，或者按开机键重启。
第四步：格式化硬盘
这一步需要一个刷了pe系统的u盘，pe系统u盘的制作这里不赘述，pe用wepe即可，指路：微PE工具箱。
c92开机，按f2进入bios，在boot标签页，在boot option priorities中调整开机启动项，把option #1改成pe系统u盘，然后按f10保存退出。
开机进入wepe，启动disk genius，选择c92的硬盘，右键选择删除所有分区，然后保存更改。
好了，这一步完成后，原硬盘格式化完成，选择关机即可。
到此，c92已经变成一个支持u盘引导的普通x86_64小盒子，可以随意刷入第三方系统。插入引导u盘以后，记得在bios的boot标签中调整启动项。
勘误 刷新bios参考的这个视频：刷BIOS，装第三方系统，升腾C92瘦客户机折腾记，其中提到在更新bios以后，需要调整advanced —— csm configuration中的一些参数。实测不需要，而且改了以后容易出bug，比如legacy引导但用了uefi固件之类导致系统无法引导之类。所以个人建议不要动这里的参数。</description>
    </item>
    
    <item>
      <title>迅雷赚钱宝一代（WS1408）可用OpenWrt固件分享</title>
      <link>https://ruohai.wang/202312/ws1408-find-a-new-openwrt-firmware/</link>
      <pubDate>Mon, 18 Dec 2023 23:08:25 +0800</pubDate>
      
      <guid>https://ruohai.wang/202312/ws1408-find-a-new-openwrt-firmware/</guid>
      <description>今天在bing搜索里随便敲了俩关键字，本意是看下有啥linux小盒子上还能装的好用、可用的服务。当然，我知道有个热门的github仓库叫做Awesome-Selfhosted都是优秀的自建服务，但它里面我几乎都用不上啊，还是要根据自己的实际情况要选择需要的服务。
谁知bing搜索还真有了一个小惊喜，搜到了迅雷赚钱宝一代（ws1408）可用的纯净版本的openwrt18/19两版固件，还是来自恩山论坛，帖子指路：
2021年了, 大家还记得迅雷赚钱宝吗? 记一次OpenWrt软件安装 赚钱宝1代2代3代openwrt官网固件线刷包 一共两个可用的版本，分别是openwrt18和openwrt19，俩都是openwrt官网版本，原滋原味，没有装任何插件，没有装任何主题，又openwrt官方源可以直接更新 &amp;amp; 安装软件。
之前在论坛里已经有一版openwrt，版本比较新，帖子指路：【更新直刷包2023.03.27 赚钱宝1代WS1408 旁路由openwrt 22.03.3 内存卡或者U盘启动】。我最初用的也是这版，因为那会只搜到了这版。这般的好处是版本比较新，内核也新，缺点是70MB的存储空间可用只有10MB多一点，而且软件源需要自己改，当时我折腾了一阵以后就没再弄，只当作samba服务器用。</description>
    </item>
    
    <item>
      <title>在玩客云上用Docker部署memos</title>
      <link>https://ruohai.wang/202311/memos-install-on-onecloud/</link>
      <pubDate>Tue, 14 Nov 2023 13:03:24 +0800</pubDate>
      
      <guid>https://ruohai.wang/202311/memos-install-on-onecloud/</guid>
      <description>前言 开篇先来个提醒：目前memos这个项目正处于快速更新迭代中，重要数据记得做好备份。
memos，轻量、方便好用、开源的自建笔记服务，可以拿来记笔记，也可以拿到当做一个自建小微博（或者自建小twitter）来用。
memos的部署，目前官方只推荐docker或者docker-compose两种方式。
那其实要部署就非常简单，准备好docker环境，然后一条命令/一个配置文件就搞定了。
但在玩客云上安装稍微有点麻烦，因为玩客云的硬件是armv7，memos的的新版已经不支持这个架构。
所以本次安装的核心就是找到支持armv7的docker镜像。
部署 第一步：准备docker环境
直接用debian仓库里的docker
sudo apt install docker.io 我更喜欢用docker-compose，配置文件方便管理
sudo apt install docker-compose docker环境到此安装完毕
第二步：准备memos的docker镜像
memos最新发布的docker镜像已经不支持armv7架构，有两个解决方案：
如果你动手能力比较强，那就下载源码自己编译一个支持armv7的版本 如果和我一样比较懒，那就找一下支持armv7的版本 在docker hub找到【neosmemo/memos】，点开tags标签，一直往前翻，可以看到2023年9月发布的0.15.0版本支持armv7。这就好办了，docker pull的时候指定版本即可。
在memos的github releases页面看一下0.15之后发布版本增加的新功能，最大的区别就是增加了用户之间评论 + 回复 + 留言的功能吧，memos从单机版变成了在线多人互动版。无奈玩客云硬件太老没有新版本可用，就安心玩单机版吧。😄
第三步：部署memos
我用的docker-compose方式部署，新建一个配置文件
# 新建目录 mkdir ~/.memos ; cd $_ # 新建配置文件 touch docker-compose.yml 然后用编辑docker-compose.yml文件，录入以下内容。
version: &amp;#34;3.0&amp;#34; services: memos: image: ghcr.io/usememos/memos:0.15.0 container_name: memos user: 1000:1000 restart: always volumes: - ~/.memos/:/var/opt/memos ports: - 5230:5230 注意，针对官方提供的配置文件，我调整了几个参数：
版本号，从latest指定为0.15.0 用户，默认是root用户运行memos，调整为UID:GID=1000:1000的non-root用户 重启方式，默认没有restart配置参数，调整为总是重启（always） 编辑好配置文件以后，开始部署即可</description>
    </item>
    
    <item>
      <title>Linux小主机（WS1608）折腾总结</title>
      <link>https://ruohai.wang/202310/ws1608-summary/</link>
      <pubDate>Wed, 04 Oct 2023 01:49:08 +0800</pubDate>
      
      <guid>https://ruohai.wang/202310/ws1608-summary/</guid>
      <description>前言 不知不觉，从4月份入手玩客云老母鸡，到6月份开始刷机折腾armbian，然后7月、8月爆肝写了几十篇博客来记录在linux下的一些基础的配置和软件安装，最后到9月、10月归于沉寂，已经有半年的时间。
时间过的真快啊。
玩客云这台小机器，刷入armbian以后，几个月用下来，优点如下：
价格便宜，只要25rmb 功耗极低，本体大概3~5w，挂两个2.5寸hdd硬盘盒也不超过10w，没有用电焦虑 armbian固件除了logo灯颜色其它完美适配，而且固件跟着armbian官方在维护更新，运行稳定 千兆网口没拖后退，下载和内网smb共享文件可以跑满usb2.0的带宽，峰值大概30M/s，够用 usb接口供电稳定，两个usb口，每个都挂上2.5寸hdd硬盘盒，稳定不掉线。这点对于需要24h挂着usb硬盘的场景非常非常重要 有sd卡槽，聊胜于无 刚拿到这台机器的时候，总想着给它刷各种各样的固件，armbian、openwrt、电视盒子、达菲等等，还想在armbian的基础上安装各种服务，挖掘它的可用性。但几个月以后就失去了兴趣，再多可可玩性，也得自己有需求才会有使用场景，目前我的小机器就是简单的当一个下载机和轻nas，安安静静的躺在角落。
这里简单记录一下，当下这台机器上我依然在高频使用的服务。
在用的服务 ddns-go
毋庸置疑这个服务是肯定需要装的，用ipv6+ddns+域名实现公网的访问。
nginx
用来做端口转发，装ssl证书实现https访问
file browser
简单的web端文件管理器
samba
局域网文件共享，必装
udevil
实现usb存储设备自动挂载
ufw
防火墙，只做了简单的端口管理
qbittorrent-nox
bt下载工具，当下载机必装，下热门资源很好用，冷门资源就算了
ttyd
web端的ssh工具，应急用一下
iperf3
用来局域网测速
navidrome
自建流媒体服务（类似qq音乐），很好用，pc客户端我用的sonixd，安卓客户端用substreamer和subtracks
speedtest-cli
用来外网测速
lm-sensors
查看芯片温度
smartmontools
查看usb外界硬盘的健康度
hugo
静态博客的本地环境，没有用hexo因为hugo安装配置很简单，主题也漂亮
git
用来配合hugo发布到github pages
tailscale
内网穿透方案，安装配置都很简单，装好以后简单测试了一下，方便好用。但我一直用的ipv6+ddns方案，保留tailscale只作为备用
准备用的服务 既然把机器当作轻nas使用，自然就要考虑到文件备份的安全性。提到文件备份，中年男人们肯定就不陌生了，著名的321原则：三个备份 + 两种介质 + 一份异地。
之前我常常取笑别人花钱买各种云盘服务保存自己那些数字垃圾，但当我碰到用了几十年的google photo服务，从当初的免费无限容量，缩水到压缩画质无限容量，到现在只给15GB免费容量，也不得不考虑用什么方案来保存自己每天生成的数字垃圾。尤其是作为google全家桶用户，gmail、photo、driver三者共享15GB的免费空间，当空间耗尽以后，会连累gmail被停用，无法收发邮件。
rclone
用来实现文件云端备份
rsync
用来实现文件多端同步备份
kopia
用来实现文件快照</description>
    </item>
    
    <item>
      <title>迅雷赚钱宝一代（WS1408）用USB转TTL工具刷机（救砖）</title>
      <link>https://ruohai.wang/202308/ws1408-use-ttl-to-flash/</link>
      <pubDate>Wed, 02 Aug 2023 17:36:56 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/ws1408-use-ttl-to-flash/</guid>
      <description>前言 迅雷赚钱宝一代，型号ws1408，nand存储 + 256mb的内存。目前可用的第三方固件都是提取的官方固件的内核制作而成的各种openwrt。
我找了恩山论坛的【这个固件】，在用晶晨刷机软件amlogic usb burning tools线刷的时候，习惯性的选择了全部擦除。
最后成功刷机。但是想要再次线刷的时候，发现晶晨软件已经无法识别到设备了，也就是变砖了。
虽然这设备几乎没啥可玩性，放海鲜市场上卖10块估计还得包邮，但我还是想给它抢救一下。
最后在恩山上找到了用ttl救砖的方法，这里做个简单记录。
准备 一个usb转ttl的转接头和杜邦线。我买的是一款CH340G型号的转接头，指路 → CH340G土豪金USB转TTL模块RS232转串口模块刷机升级小板送杜邦线 有了转接头以后，需要安装驱动。驱动程序在卖转接头的淘宝店就有提供下载，在文章末尾也提供了百度盘下载。 电脑上安装了软件putty，【下载地址】 双公头usb数据线一根 拆机 要刷机，首先需要把ws1408的主板拆出来。
撕掉贴纸，卸掉螺丝，撬开外壳，卸掉中间的螺丝，然后撬开底盖。
再卸掉四个螺丝，然后取下主板保护盖。
然后就可以把主板取下来了。
安装驱动 先下载驱动，驱动可以找淘宝商家拿，所以在文章末尾找。
注意，需要先把转接头插到电脑上，要不然安装驱动的时候会提示找不到设备。
压缩包解压后，双击setup.exe
然后点击安装即可。
安装成功后，在电脑的设备管理中查看是否多了一个usb串口设备。
刷机 先确定一下主板上ttl针脚的定义，从左往右编号1234，1是TX，2是GND，4是RX。
接下去要连接主板和转接头。主板的tx对应转接头的rx，主板gnd对应转接头的gnd，主板rx对应转接头tx。接好后，usb头插入电脑。
先打开电脑的设备管理，查看usb转接头的硬件名称，这里看到是COM3。
然后电脑上打开putty，连接类型选Serial，Serial line填COM3，Speed填115200。然后点击Open打开终端。
这个时候主板接电源通电，注意使用dc电源通电而不是插usb通电，usb会干扰putty识别设备。通电后putty终端会开始代码跑屏，立刻按下回车键暂停，然后在终端中输入update后敲回车键确认，此时终端中会显示进入了线刷模式。
到这一步，就可以在电脑上打开usb burning tool软件，导入镜像包，记得选择擦除flash选择普通擦除，然后点开始。
最后用双公头连接主板和电脑，usb burning tool就会检测到硬件，开始烧入固件。
到这里就大功告成了，用usb转ttl工具刷机结束~
😄
刷机工具 CH340G_USB驱动 → 链接: https://pan.baidu.com/s/1QDyUuiPgCpQ89RU6ofAjLg 提取码: hdc3 WS1408可用的openwrt19固件。这般固件是纯净版本的openwrt19，没有装任何插件。这版固件在刷机的时候可以选择完全擦除，不影响二次线刷。 → 链接: https://pan.baidu.com/s/18b57mh514RjHhG-1SKC0wg 提取码: xbt9 </description>
    </item>
    
    <item>
      <title>赚钱宝二代（WS1508）直刷固件的初始化设置</title>
      <link>https://ruohai.wang/202308/ws1508-init-setup/</link>
      <pubDate>Tue, 01 Aug 2023 21:33:24 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/ws1508-init-setup/</guid>
      <description>前言 不知不觉进入8月了，生活就这么碌碌无为又怅然若失。
ws1508的可用固件分为三种：
nand直刷armbian u盘启动armbian u盘启动openwrt 其中nand直刷armbian方案，在刷入固件以后，并不是开箱即用，还需要做一些初始化设置，这里做一些记录。
nand直刷固件原帖指路：【赚钱宝2代 Armbian 直刷包】软件随便装，可以apt-get，可以挂甜糖～
初始化 首先就是重新调整分区大小
resize2fs /dev/data 因为原固件没有预装ntp，需要手动设置时区
timedatectl set-timezone Asia/Shanghai 再手动设置时间，为避免后续update出异常，这里要求时间比正确时间晚一天。比如今天是2023-08-01
timedatectl set-time 2023-07-31 换源/etc/apt/source.list，这里选择用清华的源。固件是debian 10（buster），默认不支持https，所以这里用http。如果想上https，在清华debian源页面有提供设置方法，可以自行查阅。
deb http://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free deb http://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free deb http://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free deb http://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free 还是换源，这次是文件/etc/apt/source.list.d/armbian.list，依然用清华的，依然是http。
deb http://mirrors.tuna.tsinghua.edu.cn/armbian buster main buster-utils buster-desktop 然后就可以执行apt update更新软件仓库了。但更新的时候会报错public key is not available，一般缺失的两个公钥是0E98404D386FA1D9和6ED0E7B82643E131，这里需要用命令重新导入公钥。注意俩公钥的编号，需要根据实际报错的公钥编号来调整。
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0E98404D386FA1D9 apt-key adv --keyserver hkp://keyserver.</description>
    </item>
    
    <item>
      <title>迅雷赚钱宝一代（WS1408）的OpenWrt可用源分享</title>
      <link>https://ruohai.wang/202307/ws1408-openwrt-use-guide/</link>
      <pubDate>Sun, 30 Jul 2023 23:58:50 +0800</pubDate>
      
      <guid>https://ruohai.wang/202307/ws1408-openwrt-use-guide/</guid>
      <description>前言 周末回了一趟乡下，耽误了搞机。😄
ws1408只有一版openwrt固件，没有armbian。但之前俩月我都在折腾armbian，对openwrt没啥经验，这里简单记录下这两天折腾openwrt的内容。
首先openwrt也是linux魔改，意味着除了webui之外，还以ssh连上用命令行操作。
其次，这里要着重讲一下，ws1408用usb burning tool软件刷openwrt固件的时候，
【擦除flash】选项选【普通擦除】，千万不要选【全部擦除】
选后者会导致机器变砖，或者导致机器刷成功以后无法再刷机，必须要用usb ttl工具。
换源 首先是ws1408的软件源配置，固件自带的源是supes.top，访问不稳定，先换掉。这里用ustc中科大的源。
src/gz openwrt_core http://mirrors.ustc.edu.cn/openwrt/releases/22.03.3/targets/at91/sama5/packages src/gz openwrt_base http://mirrors.ustc.edu.cn/openwrt/releases/22.03.3/packages/arm_cortex-a5_vfpv4/base src/gz openwrt_luci http://mirrors.ustc.edu.cn/openwrt/releases/22.03.3/packages/arm_cortex-a5_vfpv4/luci src/gz openwrt_packages http://mirrors.ustc.edu.cn/openwrt/releases/22.03.3/packages/arm_cortex-a5_vfpv4/packages src/gz openwrt_routing http://mirrors.ustc.edu.cn/openwrt/releases/22.03.3/packages/arm_cortex-a5_vfpv4/routing src/gz openwrt_telephony http://mirrors.ustc.edu.cn/openwrt/releases/22.03.3/packages/arm_cortex-a5_vfpv4/telephony 注意ws1408要选at91/sama5和arm_cortex-a5_vfpv4这俩硬件分支的源。至于为啥我也不清楚，实际用下来确实没问题，试着装了samba4，一切正常。
换源以后，就可以在webui中点击更新列表，如果web端操作依然报错，可以ssh进系统以后执行以下命令
opkg update </description>
    </item>
    
    <item>
      <title>迅雷赚钱宝一代（WS1408）可用固件分享</title>
      <link>https://ruohai.wang/202307/ws1408-firmware-share/</link>
      <pubDate>Fri, 28 Jul 2023 20:30:01 +0800</pubDate>
      
      <guid>https://ruohai.wang/202307/ws1408-firmware-share/</guid>
      <description>因为捡垃圾，手上有了两台赚钱宝一代，型号ws1408，接近10年龄的老机器了，硬件配置现在看来已经严重落伍。
但电子垃圾到了垃圾佬手上，但凡它还有一点点残余价值可以压榨，都不会把它丢进垃圾桶。
在恩山论坛一阵搜索以后，目前确定，ws1408能用的固件，只有openwrt。有线刷和u盘/tf卡卡刷两个版本。
openwrt可以装很多插件来实现qbittorrent、samba、ddns之类的功能，虽然百兆网口限制了用它当旁路由，但拿来当个samba文件共享服务器和下载机也是不错的。
因为原帖是要求回复可见固件获取地址，为了遵守社区规则，我这里只做帖子引路：
更新直刷包2023.03.27 赚钱宝1代WS1408 旁路由openwrt 22.03.3 内存卡或者U盘启动 线刷和卡刷两个版本都在这个帖子里下载。
这篇文章简单记录下线刷的注意事项：
双公头usb线 usb burning tool软件，最好是v2.1.6.8版本，因为其它版本存在一个bug，固件太大刷入成功后校验时间过长会直接跳任务失败 线刷的openwrt固件 update@2023/07/30：注意用usb burning tool软件刷机的时候，【擦除flash】一栏，务必选择【普通擦除】，不要选【完全擦除】。选后者会导致机器成砖，或者刷机成功以后下次刷机无法被usb burning tool软件识别，必须要上usb ttl工具。我踩坑了，已经下单usb ttl，各位准备刷机的朋友们注意。 实际刷机步骤注意事项：
机器先不要插usb线，我实测usb的供电会被这机器识别为通电，然后会自动开机 usb burning tool软件里选好固件，然后直接点击【开始】 用卡针捅进reset孔，并保持住 先插上usb线，如果识别为通电也无妨，usb burning tool会检测到硬件并开始刷机，如果未识别为通电，就正好插上电源 然后等usb burning tool完成刷机，提示成功以后拔usb线、拔电源。再捅上网线和电源，等开机，然后在路由器网关界面查看新增设备的ip，在浏览器中访问该ip即可。
线刷固件默认用户root，默认密码lanlan。
到此刷机完成，可以开始折腾卵路由，不是，软路由惹~
😄</description>
    </item>
    
    <item>
      <title>今天又捡了几个电子垃圾</title>
      <link>https://ruohai.wang/202307/i-picked-up-some-rubbish-today/</link>
      <pubDate>Fri, 28 Jul 2023 17:26:33 +0800</pubDate>
      
      <guid>https://ruohai.wang/202307/i-picked-up-some-rubbish-today/</guid>
      <description>今天收到了一个快递，是昨天在闲鱼上淘的几个电子垃圾：赚钱宝一代（ws1408）两个，赚钱宝二代（ws1508）两个。
感觉自己和迅雷赚钱宝系列磕上了。😄
一共4个设备，打包了网线和充电头，40块钱包邮，这个价格很难不让人心动啊！
赚钱宝一代ws1408 在恩山论坛搜了一下，这机器太老了而且硬件配置比二代ws1508更缩水
百兆网口，当旁路由都显得鸡肋 256MB的ram，😔 1GB nand flash rom，存储空间倒是给的很大方，但是受nand分区大小限制，最多只能识别80MB。 有1个tf卡槽 有一个usb2.0接口 目前能用的固件只有一版opewrt，支持直刷。下午尝试了刷机，都没啥难度，很快就刷上了openwrt。
那目前来看，ws1408的扩展可玩性的方案，就只能基于openwrt了。还好openwrt的可装的软件也挺多的，虽然灵活性上比不过armbian什么都能手搓，但总比没有固件要好。
赚钱宝二代ws1508 ws1508是老朋友了，之前已经30包邮收过两个，硬件配置：
百兆网口 usb2.0接口一个 nand flash，多少容量不记得了。但能直刷nand的固件最多只能识别4GB 512MB ram，比一代的内存容量翻倍 ws1508因为接口少了，所以可玩性差很多，唯一的usb2.0接口需要用来插启动u盘，导致没有任何扩展存储的可能。目前的玩法，刷armbian或者刷openwrt。
这次捡的俩ws1508里，有一个是emmc版本的，这算捡漏了，emmc版本有直刷固件，那一个金贵的usb2.0接口终于可以释放出来了。</description>
    </item>
    
  </channel>
</rss>
