<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fnOS on 喵ฅ^•ﻌ•^ฅ</title>
    <link>https://ruohai.wang/tags/fnos/</link>
    <description>Recent content in fnOS on 喵ฅ^•ﻌ•^ฅ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 14 May 2025 00:03:33 +0800</lastBuildDate><atom:link href="https://ruohai.wang/tags/fnos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在飞牛fnOS上手动进行文件完整性校验</title>
      <link>https://ruohai.wang/202505/check-data-consistency/</link>
      <pubDate>Wed, 14 May 2025 00:03:33 +0800</pubDate>
      
      <guid>https://ruohai.wang/202505/check-data-consistency/</guid>
      <description>前言 玩过群晖的朋友都知道群晖的存储池在创建和使用的过程中经常能看到正在校验文件的一致性这个提示，虽然不知道底层原理但看着就让人很安心，让用户觉得文件绝对不会损坏。
fnos的存储空间的实现方案和群晖一样，都是mdadm + lvm + btrfs，但是fnos的存储空间在创建和使用的过程中，完全看不到校验文件一致性的提示。这不由得让我担心我的文件是否会出现什么宇宙射线引起的比特翻转但系统又没有定期做scrub导致文件损坏。
那fnos到底有没有进行文件一致性校验，我不知道。
但是我们可以手动进行文件校验。
文件校验 fnos的存储空间实现方案是mdadm + lvm + btfs，在2025年5月的更新中加入了ext4的支持，但我这里依然以btrfs为例。
要进行的文件校验分成两个部分：raid阵列的一致性校验 &amp;amp; 文件数据的一致性校验。
以下由ai提供的图表
那接下去就手动开始进行文件校验吧。
btrfs
以fnos的存储空间为例，一般挂载点都是/vol1，那btrfs的文件校验是以挂载点为目标
# 对存储空间1启动文件校验 sudo btrfs scrub start /vol1 # 查看校验的进度 sudo btrfs scrub status /vol1 校验完整后，可以看到输出结果如下
UUID: 6412be10-xxxx-xxxx-xxxx-xxxxxxxxxxxx Scrub started: Tue May 13 23:22:05 2025 Status: finished Duration: 1:15:23 Total to scrub: 514.29GiB Rate: 116.43MiB/s Error summary: no errors found mdadm
先确认系统的阵列状态
cat /proc/mdstat 输出结果示意如下
Personalities : [raid6] [raid5] [raid4] [raid1] [linear] [raid0] [raid10] md1 : active raid1 sde1[0] 156156928 blocks super 1.</description>
    </item>
    
    <item>
      <title>飞牛系统（fnOS）开启OVS后导致网络掉线的问题解决</title>
      <link>https://ruohai.wang/202504/fnos-ovs-makes-network-down/</link>
      <pubDate>Mon, 07 Apr 2025 14:57:26 +0800</pubDate>
      
      <guid>https://ruohai.wang/202504/fnos-ovs-makes-network-down/</guid>
      <description>fnos引入虚拟机系统以后在网络设置中添加了一个【启用OVS】的功能，大致是用openswitch工具来创建和管理虚拟网桥之类。
这个入口和编辑网络的入口放在一起，太过于明显，而且没有防呆设置，所以很容易误点导致开启了ovs网络。
当前fnos还处在快速开发期，存在很多bug，这个【误操作开启ovs网络】以后，很容易导致fnos出现网络问题，问题大致如下：
丢失公网，也就是所有公网服务掉线（比如ddns内网穿透、系统更新、数据刮削等等所有需要联网的服务），但局域网可以正常访问。 在上述【问题1】情况下，在【网络设置】中调整网络配置，会导致局域网也掉线，也就是无法访问fnos的网页，至此fnos公网和局域网的全部服务掉线，但重启机器后可以恢复到【问题1】 在上述【问题2】的情况下，如果继续在【网络设置】中开关OVS，不仅会导致fnos网络掉线，还会导致重启后也无法恢复网络，至此，只能通过将机器接上键盘和显示器，通过控制台访问 此处不深究是什么原因导致的网络崩溃，只说如何快速恢复网络：
将fnos主机接上显示器和键盘，通过控制台输入账户密码登录以后 用ovs-vsctl工具删除网桥即可 # 查看当前的网桥 sudo ovs-vsctl list-br # 删除网桥 sudo ovs-vsctl del-br &amp;lt;br-name&amp;gt; 重启网络或者重启系统 # 重启网络 sudo systemctl restart NetworkManager.service # 重启系统 sudo reboot 到这里网络就恢复正常了。
喝杯奶茶 </description>
    </item>
    
    <item>
      <title>飞牛系统fnos存储空间扩容/mdadm &#43; lvm &#43; btrfs方案的磁盘扩容</title>
      <link>https://ruohai.wang/202503/fnos-expand-vol-size/</link>
      <pubDate>Sat, 01 Mar 2025 22:17:00 +0800</pubDate>
      
      <guid>https://ruohai.wang/202503/fnos-expand-vol-size/</guid>
      <description>前言 飞牛系统的存储空间用的mdadm + lvm + btrfs的方案（群晖也是这个方案），如果想要扩容会比较麻烦，因为嵌套太多层了，不能像ext4文件系统那样用fdisk先d再n然后w最后resize2fs就行了，而且飞牛系统fnos截至目前还没有在网页控制台上添加扩容的功能。
自己盲操一遍发现比预想的复杂，不过最后还是在网上找到了别人的教程，所以写篇博客记录一下。
注意：操作有风险，记得给系统做快照、备份
操作 磁盘扩容的第一步肯定是换更大的硬盘或者在虚拟机host（pve或者esxi）中调整虚拟磁盘的大小。
这里以pve为例
在弹窗中调整大小
此时通过lsblk命令可以看到对应的磁盘/dev/sda已经变成从原来的10GB变成了15GB，但分区sda1、raid1阵列md0以及存储空间trim_xxxx的空间大小依然还是10GB。
接下去操作分成四步，依次是：
1. 扩容磁盘分区sda1
2. 扩容阵列md0
3. 扩容lvm卷trim-xxxx
4. 扩容存储空间vol1
tips: 如果是换更大容量的硬盘，可以直接换盘让阵列重建，或者用dd命令把旧盘克隆到新盘，后面的步骤就和下面的操作完全一样了。
第一步：扩容磁盘分区
分区扩容依然用到我们熟悉的fdisk，如果是gpt分区的话可以用gdisk，根据自己的情况使用。
操作步骤如图所示
步骤解析：
第一步是选择要扩容的磁盘，sudo fdisk /dev/sda，会要求输入密码认证，红字提示意思是分区大小和磁盘容量不符（废话我刚扩容了磁盘） 第二步是删除旧分区，敲字母d即可。这一步以及后面几步都无需担心数据丢失，因为操作只保留内存中，只要不保存都不会写入磁盘 第三步是创建新分区，敲字母n即可，然后会依次提示新分区的编号、新分区的起始扇区、新分区的结束扇区，都按回车用默认值 第四步出现红字提示说磁盘上有个旧分区表的签名，是否删除，敲字母n不删除 第五步，确认以上操作都没有问题，敲字母w保存本次操作 至此，分区扩容就完成了。我们用1sblk命令可以看到现在分区/dev/sda1的容量已经从10GB变成15GB惹。
tips：如果是多盘阵列，则需要依次扩容每个盘位的分区。
第二步：扩容阵列
首先确认要扩容的阵列的名字，我这里的阵列是md0。注意，在上一步中需要确认阵列中所有硬盘都已经完成了分区扩容。
可以先用mdadm -D /dev/md0命令查看阵列的状态
可以看到阵列md0当前的容量是10GB，状态是clean。
注意扩容阵列之前一定要留意阵列的状态，不要在非clean状态下扩容，说不定阵列会炸。
然后用命令mdadm --grow /dev/md0 --size=max进行扩容，会有提示阵列已经扩容到15GB，此时再用mdadm -D /dev/md0可以看到阵列已经变成15GB惹。
用lsblk再次确认阵列扩容结果
第三步：扩容lvm卷
用vgs命令查看当前的lvm卷的信息，可以看到还是10GB。
用pvresize /dev/md0命令将阵列md0的扩容信息同步给lvm
然后用vgs确认lvm卷的空间信息，可以看到对应的lvm卷已经多出了5GB的剩余空间。
接着继续扩容这个lvm卷，可以先用df -h命令获取这个lvm卷的完整路径名（注意不要忘记最后面的那个-0）
用以下命令扩容
sudo lvextend -l +100%FREE /dev/mapper/trim_ec850a20_129d_4f06_ad54_21eec30762f9-0 ## 成功提示 Size of logical volume trim_ec850a20_129d_4f06_ad54_21eec30762f9/0 changed from &amp;lt;9.</description>
    </item>
    
    <item>
      <title>用终端修改飞牛系统（fnOS）的IP地址</title>
      <link>https://ruohai.wang/202502/fnos-edit-ip-via-terminal/</link>
      <pubDate>Fri, 28 Feb 2025 21:55:14 +0800</pubDate>
      
      <guid>https://ruohai.wang/202502/fnos-edit-ip-via-terminal/</guid>
      <description>fnos的网络配置文件的路径有别于debian官方，不是/etc/network/interfaces，也不是/etc/netplan/xxxx.yaml。
fnos的网络配置文件正确路径是/etc/NetworkManager/system-connections/xxxx.nmconnection。
用nano/vim编辑以上文件即可，修改后通过systemctl restart NetworkManager.service重启网络服务后生效。
参考文章 飞牛fnOS中如何通过命令行修改IP地址~关键时刻可能会成为你的救命稻草~ 喝杯奶茶 </description>
    </item>
    
  </channel>
</rss>
