<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Syncthing on 喵ฅ^•ﻌ•^ฅ</title>
    <link>https://ruohai.wang/tags/syncthing/</link>
    <description>Recent content in Syncthing on 喵ฅ^•ﻌ•^ฅ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 21 Nov 2024 02:18:10 +0000</lastBuildDate><atom:link href="https://ruohai.wang/tags/syncthing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Syncthing基础使用：在Windows下设置开机自启 &amp; 后台运行</title>
      <link>https://ruohai.wang/202411/syncthing-auto-start-and-run-backend-on-windows/</link>
      <pubDate>Thu, 21 Nov 2024 02:18:10 +0000</pubDate>
      
      <guid>https://ruohai.wang/202411/syncthing-auto-start-and-run-backend-on-windows/</guid>
      <description>前言 syncthing官方提供的windows版本在运行时需要保持一个命令行窗口并通过浏览器进行配置的方式进行使用。
但我想要把syncthing设置为跟随windows系统开机自动启动并保持后台运行，最好是作为一个windows服务存在，尽量做到无感使用。
syncthing官方提供了两种方案，第一种是把syncthing添加到windows系统服务（比较麻烦），第二种是通过把快捷方式添加到启动目录（有bug，&amp;ndash;no-console参数在windows下无效）
最后经过实践，找到了一个比较方便快捷的设置方式，在此做个简单记录。
设置 第一步：下载文件 &amp;amp; 解压
从synchting官方下载windows版本的压缩包，解压到本地目录，我把它解压到D:\Program Files\Syncthing目录。
第二步：创建脚本
在windows资源管理器中打开启动目录，可以在地址栏中访问%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup，或者用win+r呼出运行窗口以后输入shell:startup。
在打开的启动目录下创建一个bat脚本，脚本内容如下：
@echo off if &amp;#34;%1&amp;#34;==&amp;#34;h&amp;#34; goto begin start mshta vbscript:createobject(&amp;#34;wscript.shell&amp;#34;).run(&amp;#34;&amp;#34;&amp;#34;%~nx0&amp;#34;&amp;#34; h&amp;#34;,0)(window.close)&amp;amp;&amp;amp;exit :begin cd /d D:\Program Files\Syncthing &amp;amp;&amp;amp; syncthing.exe serve --no-browser --no-restart --logflags=0 注意bat脚本中最后一行中的文件路径D:\Program Files\Syncthing要根据自己的实际情况调整。
好了，到这里就完成了syncthing在windows系统下的开机自启 &amp;amp; 后台运行了，开机的时候cmd窗口会一闪而过，但syncthing的进程依然在后台运行。
🎉
官方方案bug的修复 官方方案提到的第二种方式，创建一个快捷方式并在快捷方式中添加--no-console --no-browser参数，我实测在windows10下--no-console参数是无效的，但可以通过修改设置来实现。
在自己创建的快捷方式上右键——属性——选项，勾选使用旧版控制台，然后重启系统即可。
参考文章 使用syncthing多终端数据同步，并设置随系统自动启动 Starting Syncthing Automatically -no-console option does not work when Windows Terminal is set as Default Terminal application 喝杯奶茶 </description>
    </item>
    
    <item>
      <title>Syncthing的安装配置与使用的简单教程</title>
      <link>https://ruohai.wang/202411/syncthing-install-and-config-guide/</link>
      <pubDate>Wed, 06 Nov 2024 05:07:39 +0000</pubDate>
      
      <guid>https://ruohai.wang/202411/syncthing-install-and-config-guide/</guid>
      <description>前言 之前已经写过几篇syncthing的安装配置文章，但是时间久远，而且当时用的图床也都挂了 &amp;amp; 图片没有备份所以没法恢复，索性重新写一篇。
安装&amp;amp;启动 我用的系统是debian，软件仓库里就有syncthing，可能版本稍微旧了一点但不影响使用
sudo apt install synchting 安装好以后启动syncthing时需要指定是哪个用户来跑syncthing，如果你是root一把梭玩家，那指定root即可，否则就指定一个non-root用户。我这里以ruohai为例。
#以ruohai用户运行syncthing并设置开机启动 sudo systemctl --enable syncthing@ruohai.service 初始化配置 syncthing默认的webui的访问端口是8384，默认的通信监听端口是22000（和其它syncthing之间进行通信），所以如果有防火墙的话记得放行端口，我的防火墙管理程序是ufw，设置如下。
# 对192.168.1.0/24这个网段内的所有设备开放访问 sudo ufw allow proto tcp from 192.168.1.0/24 to any port 8384,22000 但是放行端口以后暂时还不能访问synchting的webui，因为syncthing默认只监听本机的网络请求，也就是127.0.0.1，需要手动修改配置文件，配置文件的默认路径~/.config/syncthing/config.xml。
# 用nano或者vim编辑配置文件 nano /home/ruohai/.config/syncthing/config.xml 找到gui的配置部分，修改address中的127.0.0.1为0.0.0.0，就可以监听来自所有网络的请求了。
修改完以后记得重启synchting服务
sudo systemctl restart syncthing@ruohai.service 到这里就完成syncthing的所有初始化配置了，接下去就可以访问syncthing的webui开始使用。
webui配置 在浏览器中访问http://host_ip:8384就可以打开syncthing的webui了。
首先弹窗出来的信息就是是否允许发送匿名使用报告，根据自己喜好选择即可。
点掉弹窗以后看到红色危险提醒，因为默认没有设置webui的访问账户，所以可以匿名访问blabla之类，所以需要设置一下访问账户信息。
点击设置，在【图形用户界面/GUI】标签页设置账户密码。
保存后浏览器会弹窗要求账户验证，输入刚刚设置的账户信息即可。
添加远程设备 多个设备之间想通过synchting来同步文件夹，首先要互相添加远程设备。
假定在LMDE设备上的syncthing上查看设备id。
获取到设备ID串号和一个二维码
假定在另一个Photo的机器上的【远程设备】设置区域，点击【添加远程设备】
在窗口中输入设备ID、设备名称后保存。
然后在LMDE设备上会弹窗显示新设备添加请求，选择添加设备即完成两个设备的绑定。
弹窗显示详细的设备信息和简单的配置项，无须修改，直接点击【保存】即可。
到此就完成了两个设备的绑定。
文件夹同步 完成两个设备的syncthing绑定以后，默认的同步文件夹是Default Folder，路径是~/Sync。
以此为例，我们将LMDE设备的Default Folder共享给设备Photo并进行同步。
第一步：在LMDE设备中将文件夹共享给Photo
点击选项
在共享标签中选择共享的设备Photo
在高级标签中设定两个设备之间的同步策略
完成设置后直接保存即可。
第二步：在Photo中接受共享
出现弹窗提示有文件夹共享请求，点击添加</description>
    </item>
    
    <item>
      <title>Syncthing设置只同步照片和视频文件</title>
      <link>https://ruohai.wang/202308/syncthing-sync-media-files-only/</link>
      <pubDate>Tue, 08 Aug 2023 22:41:34 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/syncthing-sync-media-files-only/</guid>
      <description>syncthing这软件的设定是用来多个设备之间保持【文件夹】内容同步，默认情况下，选择了要同步的文件夹以后，就会把文件夹内的所有内容一股脑儿进行同步，这会导致很多缩略图或者某些需要忽略系统文件也同步出去。
我的使用场景下，想要的是之同步照片和视频内容，其他的都不需要同步。这里用到的解决方法是：使用syncthing的忽略模式。
这里对synchting忽略模式的语法不做解释，直接上最后的配置规则。
常见的手机照片格式：png，jpg，HEIC，jpeg 常见的手机视频格式：mp4，HEVC 常见的动图格式：gif 好了，现在的需求是，只同步以上这些格式的文件，其他统统忽略
!**.jpg !**.jpeg !**.png !**.HEIC !**.gif !**.mp4 !**.HEVC ** </description>
    </item>
    
    <item>
      <title>Syncthing基础使用：实现增量备份/增量同步</title>
      <link>https://ruohai.wang/202308/syncthing-set-ignore-delete/</link>
      <pubDate>Wed, 02 Aug 2023 03:13:25 +0800</pubDate>
      
      <guid>https://ruohai.wang/202308/syncthing-set-ignore-delete/</guid>
      <description>脱水精简结论 Q：syncthing是否支持增量备份（增量同步）？
A：支持。被动接收一方在设置中把ignoreDelete勾选启用即可。
以下就是水内容 syncthing官方对这个参数的建议是不建议使用支持。
因为syncthing官方团队的意图是用它实现多个设备之间对某个文件夹的完全同步，如果syncthing匹配中的一方开启了ignoreDelete，容易出现无法理解的同步冲突场景。
简单来讲，假定有A和B两个设备，B设备开始了ignoreDelete，那如果A设备上删除了某文件以后，B设备上并不会同步删除，此后如果B修改了这个文件，那是否需要同步到A设备上。这里就出现了一个违背【完全同步】设计初衷的冲突场景。
具体设置 如果你确定自己需要用syncthing来实现增量备份的功能，那现在就开始设置吧。
简单来讲，ignoreDelete的逻辑是：
如果a设备会进行删除操作，但b设备不需要同步a的删除操作，那b设备需要开启ignoreDelete。
在webui上依次点击操作——高级
在文件夹选项中选择需要实现增量备份的文件夹
找到ignoreDelete参数，勾选以后保存。
到这里就实现增量备份的设置惹。
🎉
喝杯奶茶 </description>
    </item>
    
    <item>
      <title>Linux下Syncthing的安装和配置</title>
      <link>https://ruohai.wang/202307/install-syncthing/</link>
      <pubDate>Sat, 15 Jul 2023 02:50:44 +0800</pubDate>
      
      <guid>https://ruohai.wang/202307/install-syncthing/</guid>
      <description>前言 不得不说在linux下随便安装一个软件都可以写一份教程，不像Windows下载exe双击运行然后下一步下一步就能搞定。
安装 debian仓库里就有，直接apt安装就行。虽然版本略微旧了一些，但简单省事，apt一把梭！
apt install syncthing 配置 通过apt方式安装syncthing服务，配置文件的默认路径是/lib/systemd/system/syncthing@.service。配置文件的默认内容如下
[Unit] Description=Syncthing - Open Source Continuous File Synchronization for %I Documentation=man:syncthing(1) After=network.target StartLimitIntervalSec=60 StartLimitBurst=4 [Service] User=%i ExecStart=/usr/bin/syncthing serve --no-browser --no-restart --logflags=0 Restart=on-failure RestartSec=1 SuccessExitStatus=3 4 RestartForceExitStatus=3 4 # Hardening ProtectSystem=full PrivateTmp=true SystemCallArchitectures=native MemoryDenyWriteExecute=true NoNewPrivileges=true [Install] WantedBy=multi-user.target 根据这份默认的配置信息可以判断，想要启动syncthing服务，命令中需要指定用户。假定我的系统账户是jack，使用如下命令启动syncthing服务
systemctl start syncthing@jack.service 用以上默认配置启动以后，在jack的home目录会生成配置文件，默认是/home/jack/.config/syncthing/config.xml，其中可以看到gui的默认访问地址
&amp;lt;gui enabled=&amp;#34;true&amp;#34; tls=&amp;#34;false&amp;#34; debugging=&amp;#34;false&amp;#34;&amp;gt; &amp;lt;address&amp;gt;127.0.0.1:8384&amp;lt;/address&amp;gt; &amp;lt;apikey&amp;gt;xxxxxxxxxxxxxxxxxxx&amp;lt;/apikey&amp;gt; &amp;lt;theme&amp;gt;default&amp;lt;/theme&amp;gt; &amp;lt;/gui&amp;gt; 注意这里的&amp;lt;address&amp;gt;127.0.0.1:8384&amp;lt;/address&amp;gt;，默认只监听本机的访问请求，如果是远程访问，需要改成&amp;lt;address&amp;gt;0.0.0.0:8384&amp;lt;/address&amp;gt;。
总结：
apt安装syncthing以后，启动命令：systemctl start syncthing@jack.service 如果是远程访问，修改/home/jack/.config/syncthing/config.xml中的gui标签，把127.0.0.1改成0.0.0.0 修改端口，和上一条一样，把8384改成自己喜欢的端口号 完成以上的配置后，就是熟悉的重启和开机自启。
# 启动syncthing服务 systemctl restart syncthing@jack.</description>
    </item>
    
  </channel>
</rss>
