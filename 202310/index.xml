<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>202310s on 喵ฅ^•ﻌ•^ฅ</title>
    <link>https://ruohai.wang/202310/</link>
    <description>Recent content in 202310s on 喵ฅ^•ﻌ•^ฅ</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 06 Oct 2023 19:35:41 +0800</lastBuildDate><atom:link href="https://ruohai.wang/202310/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>UFW防火墙对Docker容器不生效的问题解决</title>
      <link>https://ruohai.wang/202310/ufw-solve-conflict-with-docker/</link>
      <pubDate>Fri, 06 Oct 2023 19:35:41 +0800</pubDate>
      
      <guid>https://ruohai.wang/202310/ufw-solve-conflict-with-docker/</guid>
      <description>在debian下用docker部署的方式安装了immich，默认端口2283。
为了安全，肯定不会用默认端口。部署完immich简单调试没问题以后，就开始安装ufw管理端口。
但实测发现ufw未开启2283端口的情况，immich的web服务依然可以访问，也就是ufw对docker服务不生效。
找了下解决方案。
在/etc/docker目录下新建daemon.json，添加配置项：
{ &amp;#34;iptables&amp;#34;: false } 保存退出。
# 重载 systemctl daemon-reload # 重启docker systemctl restart docker # 重启ufw systemctl restart ufw 因为ufw和docker都会操作iptables，这个方案选择禁掉docker，以ufw为准。
参考文章 Docker 和 UFW 一起用可能会出现问题 https://zhuanlan.zhihu.com/p/628899663 </description>
    </item>
    
    <item>
      <title>Immich配置SSL证书开启HTTPS访问</title>
      <link>https://ruohai.wang/202310/immich-update-to-https/</link>
      <pubDate>Fri, 06 Oct 2023 19:34:41 +0800</pubDate>
      
      <guid>https://ruohai.wang/202310/immich-update-to-https/</guid>
      <description>第一步：申请证书 申请证书这里不做赘述，阿里云从的免费证书，或者let&amp;rsquo;s encrypt的证书都可以。
我用的反代工具是nginx，所以证书是是nginx格式。
一共两个文件:
domain.key domain.pem 第二步：安装nginx 我用的系统是debian，直接apt安装
apt install nginx nginx安装好以后，默认配置文件路径/etc/nginx。
如果没有这个目录，执行以下命令，会显示nginx的配置文件路径
nginx -t 第三步：上传证书 在/etc/nginx目录下新建文件下ssl，然后用工具（比如winscp/sftp等）把两个ssl证书文件放到ssl目录下。
最终ssl证书的路径如下：
/etc/nginx/ssl/domain.key /etc/nginx/ssl/domain.pem 第四步：配置反代 进入目录/etc/nginx/sites-available，把默认的default配置文件备份，新建一个default文件。
# 进目录 cd /etc/nginx/sites-available # 备份 mv default default.bak # 新建 touch default 如果不懂为啥，就根据这个操作，如果懂，就根据自己的习惯操作。
用编辑器编辑default文件，录入一下内容，保存后退出。假定新端口是12345。
server { # 监听端口 12345 listen 12345 ssl; listen [::]:12345 ssl; # 服务名 server_name domain; # 因为需要上传照片视频，这里设定最大上传文件50GB client_max_body_size 50000M; # ssl证书路径 ssl_certificate ssl/domain.pem; ssl_certificate_key ssl/domain.key; # ssl session缓存和时间 ssl_session_cache shared:SSL:1m; ssl_session_timeout 5m; # ssl加密的相关配置 ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!</description>
    </item>
    
    <item>
      <title>Linux下给新硬盘分区并挂载</title>
      <link>https://ruohai.wang/202310/linux-partion-mount-disk/</link>
      <pubDate>Fri, 06 Oct 2023 10:56:58 +0800</pubDate>
      
      <guid>https://ruohai.wang/202310/linux-partion-mount-disk/</guid>
      <description>前言 老是忘记，查别人文章也麻烦，索性自己记录一下
分区 第一步：获取设备名 lsblk 也可以用
fdisk -l 这里假定新硬盘是/dev/sdb，用fdisk开始分区
fdisk /dev/sdb 执行以上命令后，会进入fdisk工具的命令界面，输入m可以查看使用手册。
第二步：删除旧分区（可选） 如果是旧硬盘，或者已经有分区的硬盘，需要先删除旧分区表信息，输入d
d 提示内容如下
Command (m for help): d
Partition number (1-3, default 3):
提示内容是当前有三个分区，编号1-3，请输入需要删除的分区的编号。
依次输入分区编号，会提示删除成功。
Partition 1 has been deleted.
全部删除后，进入下一步。
第三步：创建新分区 新建分区，输入n
n 提示内容如下：
Command (m for help): n
Partition type
p primary (0 primary, 0 extended, 4 free)
e extended (container for logical partitions)
p主分区，e扩展分区。选择主分区p
p 提示如下：
Partition number (1-4, default 1):
确定分区编号，默认1，直接回车默认即可，提示如下：
First sector (2048-3907029167, default 2048):</description>
    </item>
    
    <item>
      <title>开源自托管相册服务Immich的安装</title>
      <link>https://ruohai.wang/202310/immich-installation/</link>
      <pubDate>Thu, 05 Oct 2023 16:35:47 +0800</pubDate>
      
      <guid>https://ruohai.wang/202310/immich-installation/</guid>
      <description>前言 十多年来我用的相册服务一直都是google photos，大厂背书，早期宣传永久免费无限空间，而且也好用，往年今日、图像识别、关键字搜索，各种功能都很好用而且方便，如果gfw对你来说不是问题，这就是最好的方案。
不过很快它的权益就开始缩水，从原图永久免费空间，缩到高品质永久免费空间，缩到免费15GB空间。直到这两天，我发现gmail、driver、photos三者共用15GB空间，如果不续费，在空间耗尽的情况下，gmail都无法使用，因为没有空间来收发邮件了。
虽然可以用过订阅google one扩充空间，但我不喜欢这种被比较恶心的全家桶订阅制绑架用户的方案，尤其是当邮箱服务使用gmail，根本无法短时间之内迁移，迫使你不得不在清空photos腾出空间和花钱订阅之间二选一。
其实前几个月开始玩nas的时候就有考虑自建相册服务，很多方案，比如photo prism、piwigo、lychee、mt-photos、librephotos，但一直没有动手。因为这些方案对我来说都有几个比较致命的点：
无法使用原图片目录，需要通过【导入】重新存一份 不支持heic 相比起以上两点，其它的功能确实比如人脸识别、关键字搜索我都可以忽略不计。
但因为这几天被google one订阅之恶心到了，必须开始搞自建相册。
这篇文章记录下immich相册的安装过程。
安装 我的安装环境是debian 12 stable（bookworm）。权限、用户相关问题这里不多做标注，需自行解决。
immich的安装步骤在【官网】有文档，英语阅读无障碍的话可以直接看官网。
第一步：安装docker和docker compose。 apt install docker.io apt install docker-compose 第二步：在本地创建immich安装目录 mkdir immich cd immich 第三步：在immich目录下载安装所需文件 wget https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml wget -O .env https://github.com/immich-app/immich/releases/latest/download/example.env 第四步：编辑.env文件。下载的默认.env文件内容如下所示。 # You can find documentation for all the supported env variables at https://immich.app/docs/install/environment-variables # The location where your uploaded files are stored UPLOAD_LOCATION=./library # The Immich version to use. You can pin this to a specific version like &amp;#34;v1.</description>
    </item>
    
    <item>
      <title>Linux小主机（WS1608）折腾总结</title>
      <link>https://ruohai.wang/202310/ws1608-summary/</link>
      <pubDate>Wed, 04 Oct 2023 01:49:08 +0800</pubDate>
      
      <guid>https://ruohai.wang/202310/ws1608-summary/</guid>
      <description>前言 不知不觉，从4月份入手玩客云老母鸡，到6月份开始刷机折腾armbian，然后7月、8月爆肝写了几十篇博客来记录在linux下的一些基础的配置和软件安装，最后到9月、10月归于沉寂，已经有半年的时间。
时间过的真快啊。
玩客云这台小机器，刷入armbian以后，几个月用下来，优点如下：
价格便宜，只要25rmb 功耗极低，本体大概3~5w，挂两个2.5寸hdd硬盘盒也不超过10w，没有用电焦虑 armbian固件除了logo灯颜色其它完美适配，而且固件跟着armbian官方在维护更新，运行稳定 千兆网口没拖后退，下载和内网smb共享文件可以跑满usb2.0的带宽，峰值大概30M/s，够用 usb接口供电稳定，两个usb口，每个都挂上2.5寸hdd硬盘盒，稳定不掉线。这点对于需要24h挂着usb硬盘的场景非常非常重要 有sd卡槽，聊胜于无 刚拿到这台机器的时候，总想着给它刷各种各样的固件，armbian、openwrt、电视盒子、达菲等等，还想在armbian的基础上安装各种服务，挖掘它的可用性。但几个月以后就失去了兴趣，再多可可玩性，也得自己有需求才会有使用场景，目前我的小机器就是简单的当一个下载机和轻nas，安安静静的躺在角落。
这里简单记录一下，当下这台机器上我依然在高频使用的服务。
在用的服务 ddns-go
毋庸置疑这个服务是肯定需要装的，用ipv6+ddns+域名实现公网的访问。
nginx
用来做端口转发，装ssl证书实现https访问
file browser
简单的web端文件管理器
samba
局域网文件共享，必装
udevil
实现usb存储设备自动挂载
ufw
防火墙，只做了简单的端口管理
qbittorrent-nox
bt下载工具，当下载机必装，下热门资源很好用，冷门资源就算了
ttyd
web端的ssh工具，应急用一下
iperf3
用来局域网测速
navidrome
自建流媒体服务（类似qq音乐），很好用，pc客户端我用的sonixd，安卓客户端用substreamer和subtracks
speedtest-cli
用来外网测速
lm-sensors
查看芯片温度
smartmontools
查看usb外界硬盘的健康度
hugo
静态博客的本地环境，没有用hexo因为hugo安装配置很简单，主题也漂亮
git
用来配合hugo发布到github pages
tailscale
内网穿透方案，安装配置都很简单，装好以后简单测试了一下，方便好用。但我一直用的ipv6+ddns方案，保留tailscale只作为备用
准备用的服务 既然把机器当作轻nas使用，自然就要考虑到文件备份的安全性。提到文件备份，中年男人们肯定就不陌生了，著名的321原则：三个备份 + 两种介质 + 一份异地。
之前我常常取笑别人花钱买各种云盘服务保存自己那些数字垃圾，但当我碰到用了几十年的google photo服务，从当初的免费无限容量，缩水到压缩画质无限容量，到现在只给15GB免费容量，也不得不考虑用什么方案来保存自己每天生成的数字垃圾。尤其是作为google全家桶用户，gmail、photo、driver三者共享15GB的免费空间，当空间耗尽以后，会连累gmail被停用，无法收发邮件。
rclone
用来实现文件云端备份
rsync
用来实现文件多端同步备份
kopia
用来实现文件快照</description>
    </item>
    
  </channel>
</rss>
