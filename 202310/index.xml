<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>202310s on 喵ฅ^•ﻌ•^ฅ</title>
    <link>https://ruohai.wang/202310/</link>
    <description>Recent content in 202310s on 喵ฅ^•ﻌ•^ฅ</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 05 Oct 2023 16:35:47 +0800</lastBuildDate><atom:link href="https://ruohai.wang/202310/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>开源自托管相册服务Immich的安装</title>
      <link>https://ruohai.wang/202310/immich-installation/</link>
      <pubDate>Thu, 05 Oct 2023 16:35:47 +0800</pubDate>
      
      <guid>https://ruohai.wang/202310/immich-installation/</guid>
      <description>前言 十多年来我用的相册服务一直都是google photos，大厂背书，早期宣传永久免费无限空间，而且也好用，往年今日、图像识别、关键字搜索，各种功能都很好用而且方便，如果gfw对你来说不是问题，这就是最好的方案。
不过很快它的权益就开始缩水，从原图永久免费空间，缩到高品质永久免费空间，缩到免费15GB空间。直到这两天，我发现gmail、driver、photos三者共用15GB空间，如果不续费，在空间耗尽的情况下，gmail都无法使用，因为没有空间来收发邮件了。
虽然可以用过订阅google one扩充空间，但我不喜欢这种被比较恶心的全家桶订阅制绑架用户的方案，尤其是当邮箱服务使用gmail，根本无法短时间之内迁移，迫使你不得不在清空photos腾出空间和花钱订阅之间二选一。
其实前几个月开始玩nas的时候就有考虑自建相册服务，很多方案，比如photo prism、piwigo|lychee、mt-photos、librephotos，但一直没有动手。因为这些方案对我来说都有几个比较致命的点：
无法使用原图片目录，需要通过【导入】重新存一份 不支持heic 相比起以上两点，其它的功能确实比如人脸识别、关键字搜索我都可以忽略不计。
但因为这几天被google one订阅之恶心到了，必须开始搞自建相册。
这篇文章记录下immich相册的安装过程。
安装 我的安装环境是debian 12 stable（bookworm）。权限、用户相关问题这里不多做标注，需自行解决。
immich的安装步骤在【官网】有文档，英语阅读无障碍的话可以直接看官网。
第一步：安装docker和docker compose。
apt install docker.io apt install docker-compose 第二步：在本地创建immich安装目录
mkdir immich cd immich 第三步：在immich目录下载安装所需文件
wget https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml wget -O .env https://github.com/immich-app/immich/releases/latest/download/example.env 第四步：编辑.env文件。下载的默认.env文件内容如下所示。在最简单的配置模式下，只需要修改三个地方，其它都可以用默认设置。
UPLOAD_LOCATION，文件上传路径，根据自己的实际存储路径修改 TYPESENSE_API_KEY，搜索引擎api key，可以自行用命令生成随机字符串后填入 DB_PASSWORD，数据库密码，根据自己需求修改密码 # You can find documentation for all the supported env variables at https://immich.app/docs/install/environment-variables # The location where your uploaded files are stored UPLOAD_LOCATION=./library # The Immich version to use.</description>
    </item>
    
    <item>
      <title>Linux小主机（WS1608）折腾总结</title>
      <link>https://ruohai.wang/202310/ws1608-summary/</link>
      <pubDate>Wed, 04 Oct 2023 01:49:08 +0800</pubDate>
      
      <guid>https://ruohai.wang/202310/ws1608-summary/</guid>
      <description>前言 不知不觉，从4月份入手玩客云老母鸡，到6月份开始刷机折腾armbian，然后7月、8月爆肝写了几十篇博客来记录在linux下的一些基础的配置和软件安装，最后到9月、10月归于沉寂，已经有半年的时间。
时间过的真快啊。
玩客云这台小机器，刷入armbian以后，几个月用下来，优点如下：
价格便宜，只要25rmb 功耗极低，本体大概3~5w，挂两个2.5寸hdd硬盘盒也不超过10w，没有用电焦虑 armbian固件除了logo灯颜色其它完美适配，而且固件跟着armbian官方在维护更新，运行稳定 千兆网口没拖后退，下载和内网smb共享文件可以跑满usb2.0的带宽，峰值大概30M/s，够用 usb接口供电稳定，两个usb口，每个都挂上2.5寸hdd硬盘盒，稳定不掉线。这点对于需要24h挂着usb硬盘的场景非常非常重要 有sd卡槽，聊胜于无 刚拿到这台机器的时候，总想着给它刷各种各样的固件，armbian、openwrt、电视盒子、达菲等等，还想在armbian的基础上安装各种服务，挖掘它的可用性。但几个月以后就失去了兴趣，再多可可玩性，也得自己有需求才会有使用场景，目前我的小机器就是简单的当一个下载机和轻nas，安安静静的躺在角落。
这里简单记录一下，当下这台机器上我依然在高频使用的服务。
在用的服务 ddns-go
毋庸置疑这个服务是肯定需要装的，用ipv6+ddns+域名实现公网的访问。
nginx
用来做端口转发，装ssl证书实现https访问
file browser
简单的web端文件管理器
samba
局域网文件共享，必装
udevil
实现usb存储设备自动挂载
ufw
防火墙，只做了简单的端口管理
qbittorrent-nox
bt下载工具，当下载机必装，下热门资源很好用，冷门资源就算了
ttyd
web端的ssh工具，应急用一下
iperf3
用来局域网测速
navidrome
自建流媒体服务（类似qq音乐），很好用，pc客户端我用的sonixd，安卓客户端用substreamer和subtracks
speedtest-cli
用来外网测速
lm-sensors
查看芯片温度
smartmontools
查看usb外界硬盘的健康度
hugo
静态博客的本地环境，没有用hexo因为hugo安装配置很简单，主题也漂亮
git
用来配合hugo发布到github pages
tailscale
内网穿透方案，安装配置都很简单，装好以后简单测试了一下，方便好用。但我一直用的ipv6+ddns方案，保留tailscale只作为备用
准备用的服务 既然把机器当作轻nas使用，自然就要考虑到文件备份的安全性。提到文件备份，中年男人们肯定就不陌生了，著名的321原则：三个备份 + 两种介质 + 一份异地。
之前我常常取笑别人花钱买各种云盘服务保存自己那些数字垃圾，但当我碰到用了几十年的google photo服务，从当初的免费无限容量，缩水到压缩画质无限容量，到现在只给15GB免费容量，也不得不考虑用什么方案来保存自己每天生成的数字垃圾。尤其是作为google全家桶用户，gmail、photo、driver三者共享15GB的免费空间，当空间耗尽以后，会连累gmail被停用，无法收发邮件。
rclone
用来实现文件云端备份
rsync
用来实现文件多端同步备份
kopia
用来实现文件快照</description>
    </item>
    
  </channel>
</rss>
