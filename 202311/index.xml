<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>202311s on 喵ฅ^•ﻌ•^ฅ</title>
    <link>https://ruohai.wang/202311/</link>
    <description>Recent content in 202311s on 喵ฅ^•ﻌ•^ฅ</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 16 Nov 2023 01:21:11 +0800</lastBuildDate><atom:link href="https://ruohai.wang/202311/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>twitter账号被冻结的原因分析</title>
      <link>https://ruohai.wang/202311/twitter-why-got-suspended/</link>
      <pubDate>Thu, 16 Nov 2023 01:21:11 +0800</pubDate>
      
      <guid>https://ruohai.wang/202311/twitter-why-got-suspended/</guid>
      <description>这几天复盘了一下我的账号为什么会被冻结，我违反了twitter的哪条rule。思来想去，夜不能寐。
突然灵光一闪，我猜到原因了：滥用api。
马斯克接手twitter以后，很快就调整了twitter api的使用限制，那会还闹出了各种搞笑的限制措施，比如一天刷推数量限定200条。在这些莫名其妙的限制中，有一些在测试几天以后就在一片骂声中撤回了，还有一些是在严格执行的。
之前朋友给我分享过一个chrome应用商店里的插件，可以用来下载twitter上的视频文件，我觉得很好用，就一直装着这个插件。马斯克接手twitter以后，这个插件就被投诉下架了，投诉理由是滥用api。但已经装在浏览器上的插件并不会自己消失，我依然在用这个插件。大概率是这个插件的原因，导致我的账号被当作违反规则的行为而被冻结了。
想明白了原因，又用gpt写了一份申诉信。回信内容一如预料：这个账号被冻结（this account is suspended）。
😄</description>
    </item>
    
    <item>
      <title>在玩客云（armv7）上安装memos</title>
      <link>https://ruohai.wang/202311/memos-install-on-onecloud/</link>
      <pubDate>Tue, 14 Nov 2023 13:03:24 +0800</pubDate>
      
      <guid>https://ruohai.wang/202311/memos-install-on-onecloud/</guid>
      <description>前言 memos官网文档对于部署memos服务用的方法是docker，没什么意外的话，就是一条命令的事，很简单。
但不出意外肯定就是要出意外了，我准备在玩客云上部署memos，玩客云是armv7的硬件，memos的最新版已经不支持armv7。
那就简单记录下怎么弄吧。
docker 我是在debian系统上跑docker，所以直接用debian软件仓库里的docker.io
apt install docker.io 我更喜欢用docker-compose，配置文件方便管理
apt install docker-compose docker环境到此安装完毕
memos memos目前最新版是v0.17.0，但新版本已经不支持armv7，所以没法安装。
这时候有两个解决方案：
如果你动手能力比较强，可以从memos的github repo下载源码自己编译 如果和和我一样比较懒，那就找一下支持armv7的版本 memos官方用的github的容器站ghcr.io，各个版本看不到支持的硬件架构。没办法，去hub.docker.com看看。
在memos的【docker-hub发布页面的tag标签】里，可以看到2个月前发布的0.15.0版本支持armv7。这就好办了，docker pull的时候指定版本即可。
我用的docker-compose方式部署，先新建一个配置文件
# 新建目录 mkdir ~/.memos # 新建配置文件 mkdir ~/.memos/docker-compose.yml 然后用nano编辑docker-compose.yml文件，录入以下内容。
version: &amp;#34;3.0&amp;#34; services: memos: image: ghcr.io/usememos/memos:0.15.0 container_name: memos user: 1000:1000 restart: always volumes: - ~/.memos/:/var/opt/memos ports: - 5230:5230 注意，针对官方提供的配置文件，我调整了几个参数：
版本号，从latest改为0.15.0 用户，默认是root用户运行memos，调整为UID:GID=1000:1000的non-root用户 重启方式，默认没有restart配置参数，调整为总是重启（always） 编辑好配置文件以后，开始部署即可
docker-compose up -d 其它几个常用命令
# 停止服务 docker-compose stop # 卸载（删除）服务 docker-compose down -v 如果要升级或者重新部署memos，记得备份~/.memos/目录下的数据库文件memos_prod.db和附件目录assets。</description>
    </item>
    
    <item>
      <title>往mdadm创建的raid5阵列中添加新硬盘以扩容</title>
      <link>https://ruohai.wang/202311/mdadm-add-new-hdd-to-raid5-arrary/</link>
      <pubDate>Tue, 14 Nov 2023 12:44:00 +0800</pubDate>
      
      <guid>https://ruohai.wang/202311/mdadm-add-new-hdd-to-raid5-arrary/</guid>
      <description>前言 之前手上只有4块hdd，虽然硬盘柜有5个盘位，但只是用4盘组了raid5。
raid5用了一阵以后，觉得还行，就想着把剩下的一个空盘位利用起来，所以又从pdd入手了好几片500GB的拆机硬盘。
硬盘到手了，照例又是查smart信息、全盘扫坏道。几块西数的是清零盘，但没有扫出坏道；几块希捷的通电时间惊人，一块3万小时，一块6万小时，但没有扫出坏道。
也就20rmb一片，既然没坏道，那就凑合着用吧。
raid5扩容 先描述下本次我想要实现的需求：有一个正在运行的四盘位raid5阵列，添加一个块同容量的硬盘，从四盘位扩展为五盘位。
有需求了就找解决方案，搜关键字mdadm、raid5、添加硬盘，但没有搜到什么靠谱可用的方案，那就自己摸索吧。
已有raid5阵列要添加硬盘，有两个方案：
方案一： 新建raid5
这个方案很傻瓜，但是非常的安全而且非常的效率，可行度100%。前提是你手上有很多备用硬盘，或者有一个大容量硬盘做数据中转。
如果手上硬盘数量足够多，那就保持旧四盘位raid不动，新组装一个五盘位raid5，然后直接从旧raid拷数据到新raid。整个任务所耗费的时间由两个raid的硬盘读写速度和局域网带宽决定。
如果手上硬盘不够用来组新raid，那先从旧raid把数据导出一份备份，然后停用四盘位旧raid + 加硬盘 + 创建五盘位新raid，最后把备份的数据再导入回去。
方案二：旧raid5扩容
这个方案有一定的风险性，操作前最好把数据备份一下。
旧四盘位的raid5，添加一块硬盘。假定新添加的硬盘是/dev/sdf。
第一步：清除分区数据。
因为我的旧raid是清除了分区直接裸盘组raid，所以新硬盘也先清除分区信息。如果你的raid是先分区然后以分区为单位组装的raid，那新硬盘也记得同样先分区。
# 查看分区信息 wipefs /dev/sdf # 清除分区信息 wipefs -a -f /dev/sdf 第二步：添加硬盘
新盘添加进阵列。假定阵列名为/dev/md0。
mdadm --manage /dev/md0 --add /dev/sdf 添加完成后，查看一下阵列信息。
mdadm -D /dev/md0 此时可以看到阵列的硬盘数量从4变成了5。但是新加入的硬盘并没有真正的融入进去，它的角色是hot spare热备盘，也就是当四盘raid中出现一块坏盘时，这块新盘会自动替上去重建raid修复数据。
第三步：重塑（reshape）
我的目的并不是给四盘位raid5添加一块热备盘（hot spare），我是想把新盘加进存储池扩充容量。
指定raid5的硬盘数量为5
mdadm --grow /dev/md0 --raid-devices=5 命令执行完成后，查看一下阵列信息
mdadm -D /dev/md0 此时就可以看到，存储池的硬盘从4块变成了5块，新的raid开始重塑（reshaping）。
整个重塑过程会非常非常非常的漫长，这个时间单位以小时甚至以天计算，请耐心等待mdadm完成任务。
第四步：调整阵列容量
在经历了漫长的重塑（reshape）以后，进度条终于到了100%，可以进行下一步操作了。
把raid容量调整为最大！
mdadm --grow /dev/md0 --size=max 查看阵列当前状态，会看到当前是resyncing(同步)。
mdadm --detail /dev/md0 然后耐心等待mdadm对阵列进行同步（resyncing），这个过程比重塑（reshape）快很多。</description>
    </item>
    
    <item>
      <title>我的推特账号被冻结了</title>
      <link>https://ruohai.wang/202311/twitter-account-was-suspended/</link>
      <pubDate>Tue, 14 Nov 2023 12:40:38 +0800</pubDate>
      
      <guid>https://ruohai.wang/202311/twitter-account-was-suspended/</guid>
      <description>是的，我的twitter账号被冻结了。
冻结的时间点大概是2023年11月12日凌晨2点，首页提示账户被冻结如有疑问请发申诉信。
发了三次申诉信，前两份是用自己高中残留的英语水平表述这可能是一个错判请重新review这次操作，很快就收到邮件，简短一句话：这个账号被冻结（this account is suspended）。
12号白天的时候用gpt4生成了一份完美的申诉信，很快又收到了邮件，依然是简短的一句话：这个账号被冻结（this account is suspended）。
行吧，不纠结了。
如果要说这个账号对我是否重要，我能写出千字它对我的重要性。从2008年8月注册，到2013年11月被冻结，使用了近16年的账号，记录了我从上学到工作、从年轻人变中年人、从单身到处对象最后又恢复单身，这一切的点点滴滴。
账号就此被冻结，连导出个人数据存档的选择都没有，至此，我的一十六年的记录消失在互联网。
这两年也确实进入了人生低谷期，半生役役未见成功，茕茕孑立不知所向，已无力、无心继续在网络上记录个人生活日常。此事就当是和过往做个了结。
希望接下去的日子，朋友，你和我，每天都开心。</description>
    </item>
    
    <item>
      <title>Linux下迁移mdadm软raid</title>
      <link>https://ruohai.wang/202311/mdadm-auto-mount-raid/</link>
      <pubDate>Fri, 10 Nov 2023 18:03:30 +0800</pubDate>
      
      <guid>https://ruohai.wang/202311/mdadm-auto-mount-raid/</guid>
      <description>当在A系统下用mdadm组装的软raid阵列，如果全盘迁移到B系统时，如何正确的重新组装并识别。
有两种解决方案：
方案一：B系统重启 B系统先安装mdadm，然后关机，接着插上raid阵列的所有硬盘，最后B系统重启即可。B系统启动后会自动识别软raid阵列并正确组装，之后只需要动手完成挂载。
方案二：B系统不重启 现在A系统中卸载（umount）软raid阵列，然后把阵列的所有硬盘插到B系统主机。
这里又分两种情况。
先安装mdadm，然后raid硬盘都插入后，系统会自动识别raid并正确组装
先插入raid阵列所有硬盘，然后安装mdadm，此时系统无法自动识别raid，需要手动组装
设定raid阵列名为md0，4个阵列盘分为sdb、sdc、sdd、sde。执行以下命令，即可完成raid组装与识别，之后再手动完成挂载。
# 组装阵列，mdadm会自动识别raid类型 mdadm -A /dev/md0 /dev/sd[b-e] # 手动挂载 mount /dev/md0 /mnt/raid </description>
    </item>
    
    <item>
      <title>Hugo博客的安装</title>
      <link>https://ruohai.wang/202311/hugo-install-guide/</link>
      <pubDate>Wed, 01 Nov 2023 00:32:27 +0800</pubDate>
      
      <guid>https://ruohai.wang/202311/hugo-install-guide/</guid>
      <description>前言 这两天重新部署了nas，而且博客用的主题m10c也已经停止维护快一年，新版本的hugo已经不支持这个主题。两个原因叠加，正好重新部署hugo。
离上一次部署已经过去快四个月，需要重新看官方文档才能回忆起步骤。看之前自己写的教程也觉得啰里啰唆，旧文懒得改，索性重新记录一篇。
安装 第一步：下载安装包
之前是直接apt install用的debian仓库版本，但太老了，还一直停在0.111.3版本，而且apt安装还会附带一大堆其它包，提示需要几百MB的存储空间，所以这次放弃apt，直接到github仓库下载二进制安装包。
github指路：https://github.com/gohugoio/hugo/releases
下载对应系统、对应硬件架构的版本，然后添加环境变量。
windows：把压缩包解压到D:\hugo并把路径添加到环境变量，高级系统设置——环境变量——系统变量——path，保存退出。 linux：把压缩包解压到/opt/hugo并把路径添加到.bashrc，在末尾加一行export PATH=$PATH:/opt/hugo，然后source ~/.bashrc让变更生效。 配置完以后，敲命令hugo -h看是否正常输出。
第二步：创建博客目录
hugo new site myblog 第三步：获取主题
hugo官网主题商店指路：https://themes.gohugo.io/
# 进入博客目录 cd myblog # 初始化git仓库 git init # 克隆paper主题到themes/paper目录 git clone https://github.com/nanxiaobei/hugo-paper themes/paper 然后在hugo.toml配置文件中指定主题即可
theme = &amp;#34;paper&amp;#34; 第四步：本地运行
安装了主题以后，本地运行查看效果
hugo server 如果非本机访问，而是局域网内其他机器访问，需要加bind参数
hugo server --bind=&amp;#34;0.0.0.0&amp;#34; 第五步：写文章
写文章需要先根据模板新建markdown文件
hugo new post/my-first-blog.md 其中post是归档目录，也是发布博客以后的url地址，可以根据自己喜好调整，比如我喜欢根据月份归档，那就是
hugo new 202311/my-first-blog.md 第六步：编译博客
博客写好以后，在发布之前，需要编译成html静态页面。
# 进入目录 cd myblog # 编译 hugo 注意编译的时候，默认会忽略草稿，也就是markdown文件中的draft: false标签，如果是true，默认在执行hugo编译的时候会忽略掉这篇草稿。
第七步：发布博客
在编译完成后，在myblog目录下会出现一个public目录，要发布博客，就只需要把public目录下的内容推送到目标服务器就行了，比如自己的服务器、github pages、cloudflare pages等等。</description>
    </item>
    
  </channel>
</rss>
